digraph G {
fontname = "Avenir Book"
fontsize = 10
node [
fontname = "Avenir Book"
fontsize = 10
shape = "record"
]
edge [
fontname = "Avenir Book"
fontsize = 10
]
ModelVisitor [
shape="record",
label = "{ModelVisitor|- patterns : List\l|+ init(arg0:IModel) : void\l+ setPatterns(arg0:List) : void\l# visitClass(arg0:IClass) : void\l# visitMethod(arg0:IMethod) : void\l# visitField(arg0:IField) : void\l# visitPattern(arg0:IPattern) : void\l# visitRelation(arg0:IRelation) : void\l- getClassByName(arg0:IModel,arg1:String) : IClass\l}"
];
DecoratorDetector [
shape="record",
label = "{DecoratorDetector|- threshold : int\l|+ init(arg0:int) : void\l+ toString() : String\l+ detect(arg0:IModel) : void throws Exception\l- getParamInConst(arg0:IClass) : Set\l- getClassByName(arg0:IModel,arg1:String) : IClass\l- detectPatternWithField(arg0:IField,arg1:IClass,arg2:IModel) : void throws Exception\l- updateModelWithPattern(arg0:IClass,arg1:IModel,arg2:String) : void throws Exception\l- addTagAndUpdatePattern(arg0:IPattern,arg1:IClass,arg2:IModel) : void throws Exception\l- composeSuper(arg0:IClass,arg1:IModel) : IField\l- composeInterface(arg0:IClass,arg1:IModel) : IField\l- getInterfaces(arg0:IClass,arg1:Set) : Set\l- getSuperClasses(arg0:IClass,arg1:Set) : Set\l- getSuper(arg0:String,arg1:Set) : String\l}"
];
IClass [
shape="record",
label = "{\<\<interface\>\>\nIClass|+ addMethod(arg0:IMethod) : void\l+ addField(arg0:IField) : void\l+ addDeclaration(arg0:IDeclaration) : void\l+ getDeclaration() : IDeclaration\l+ getMethods() : List\l+ getFields() : List\l+ getName() : String\l+ getTags() : Set\l+ addTag(arg0:String) : void\l+ isVisible() : boolean\l+ setVisible(arg0:boolean) : void\l}"
];
App [
shape="record",
label = "{App|+ init() : void\l+ main(arg0:String[]) : void throws Exception\l+ createUmlWithPattern(arg0:String) : void throws Exception\l+ createUmlDiagram(arg0:String) : void throws Exception\l+ createSequenceDiagram(arg0:String[]) : void throws Exception\l}"
];
Frame [
shape="record",
style="filled"
fillcolor="yellow"
label = "{Frame\n\<\<Leaf\>\>\n|+ DEFAULT_CURSOR : int\l+ CROSSHAIR_CURSOR : int\l+ TEXT_CURSOR : int\l+ WAIT_CURSOR : int\l+ SW_RESIZE_CURSOR : int\l+ SE_RESIZE_CURSOR : int\l+ NW_RESIZE_CURSOR : int\l+ NE_RESIZE_CURSOR : int\l+ N_RESIZE_CURSOR : int\l+ S_RESIZE_CURSOR : int\l+ W_RESIZE_CURSOR : int\l+ E_RESIZE_CURSOR : int\l+ HAND_CURSOR : int\l+ MOVE_CURSOR : int\l+ NORMAL : int\l+ ICONIFIED : int\l+ MAXIMIZED_HORIZ : int\l+ MAXIMIZED_VERT : int\l+ MAXIMIZED_BOTH : int\l maximizedBounds : Rectangle\l title : String\l menuBar : MenuBar\l resizable : boolean\l undecorated : boolean\l mbManagement : boolean\l- state : int\l ownedWindows : Vector\l- base : String\l- nameCounter : int\l- serialVersionUID : long\l- frameSerializedDataVersion : int\l|+ init() : void throws HeadlessException\l+ init(arg0:GraphicsConfiguration) : void\l+ init(arg0:String) : void throws HeadlessException\l+ init(arg0:String,arg1:GraphicsConfiguration) : void\l- init(arg0:String,arg1:GraphicsConfiguration) : void\l constructComponentName() : String\l+ addNotify() : void\l+ getTitle() : String\l+ setTitle(arg0:String) : void\l+ getIconImage() : Image\l+ setIconImage(arg0:Image) : void\l+ getMenuBar() : MenuBar\l+ setMenuBar(arg0:MenuBar) : void\l+ isResizable() : boolean\l+ setResizable(arg0:boolean) : void\l+ setState(arg0:int) : void\l+ setExtendedState(arg0:int) : void\l- isFrameStateSupported(arg0:int) : boolean\l+ getState() : int\l+ getExtendedState() : int\l+ setMaximizedBounds(arg0:Rectangle) : void\l+ getMaximizedBounds() : Rectangle\l+ setUndecorated(arg0:boolean) : void\l+ isUndecorated() : boolean\l+ setOpacity(arg0:float) : void\l+ setShape(arg0:Shape) : void\l+ setBackground(arg0:Color) : void\l+ remove(arg0:MenuComponent) : void\l+ removeNotify() : void\l postProcessKeyEvent(arg0:KeyEvent) : void\l# paramString() : String\l+ setCursor(arg0:int) : void\l+ getCursorType() : int\l+ getFrames() : Frame[]\l- writeObject(arg0:ObjectOutputStream) : void throws IOException\l- readObject(arg0:ObjectInputStream) : void throws ClassNotFoundException,IOException,HeadlessException\l- initIDs() : void\l+ getAccessibleContext() : AccessibleContext\l access$002(arg0:Frame,arg1:int) : int\l access$000(arg0:Frame) : int\l clinit() : void\l}"
];
ResultFrame [
shape="record",
style="filled"
fillcolor="yellow"
label = "{ResultFrame\n\<\<Leaf\>\>\n|- model : IModel\l- reader : TMXXreader\l- outputStream : IOutputStream\l- patterns : HashMap\l- classString : HashMap\l- patternList : ArrayList\l- m : ModelVisitor\l- proxy : UMLImageProxy\l- serialVersionUID : long\l- FIXED_WIDTH : int\l- FIXED_HEIGHT : int\l- INITAL_SIZE : Dimension\l| clinit() : void\l+ init(arg0:Framework$DataBox) : void\l- addMenuBar() : void\l- addPattern(arg0:JPanel) : void\l- patternCheckBoxAction(arg0:ActionEvent) : void\l- classCheckBoxAction(arg0:ActionEvent) : void\l+ update(arg0:Object) : void\l access$0(arg0:ResultFrame,arg1:ActionEvent) : void\l access$1(arg0:ResultFrame,arg1:ActionEvent) : void\l}"
];
VisitType [
shape="record",
label = "{VisitType|+ PreVisit : VisitType\l+ Visit : VisitType\l+ PostVisit : VisitType\l- ENUM$VALUES : VisitType[]\l| clinit() : void\l- init(arg0:String,arg1:int) : void\l+ values() : VisitType[]\l+ valueOf(arg0:String) : VisitType\l}"
];
Model [
shape="record",
label = "{Model|- classes : Set\l- relations : Set\l- patterns : Set\l|+ init() : void\l+ accept(arg0:IVisitor) : void\l+ contains(arg0:IRelation) : boolean\l+ toString() : String\l+ getClasses() : Set\l+ getRelations() : Set\l+ setRelation(arg0:Set) : void\l+ addClass(arg0:IClass) : void\l+ addRelation(arg0:IRelation) : void\l- checkRelation(arg0:IRelation) : boolean\l+ getPatterns() : Set\l+ addPattern(arg0:IPattern) : void\l+ getClone() : IModel\l}"
];
Field [
shape="record",
label = "{Field|- isStatic : boolean\l- name : String\l- type : String\l- access : String\l- innerType : String\l- className : String\l|+ init(arg0:String,arg1:String,arg2:String,arg3:String) : void\l+ toString() : String\l+ getName() : String\l+ getType() : String\l+ getAccess() : String\l+ accept(arg0:IVisitor) : void\l+ isStatic() : boolean\l+ setStatic(arg0:boolean) : void\l+ getInnerType() : String\l+ setInnerType(arg0:String) : void\l+ getClassName() : String\l}"
];
IVisitor [
shape="record",
label = "{\<\<interface\>\>\nIVisitor|+ preVisit(arg0:ITraverser) : void\l+ visit(arg0:ITraverser) : void\l+ postVisit(arg0:ITraverser) : void\l+ addVisit(arg0:VisitType,arg1:Class,arg2:IVisitMethod) : void\l+ removeVisit(arg0:VisitType,arg1:Class) : void\l}"
];
LookupKey [
shape="record",
label = "{LookupKey| visitType : VisitType\l clazz : Class\l|+ init(arg0:VisitType,arg1:Class) : void\l+ hashCode() : int\l+ equals(arg0:Object) : boolean\l}"
];
UMLImageComponent [
shape="record",
style="filled"
fillcolor="yellow"
label = "{UMLImageComponent\n\<\<Leaf\>\>\n|- serialVersionUID : long\l- icon : Icon\l|+ init(arg0:Icon) : void\l+ setIcon(arg0:Icon) : void\l+ paintComponent(arg0:Graphics) : void\l}"
];
Relation [
shape="record",
label = "{Relation|- from : String\l- to : String\l- type : String\l- des : String\l- isVisible : boolean\l|+ accept(arg0:IVisitor) : void\l+ init(arg0:String,arg1:String,arg2:String) : void\l+ toString() : String\l+ getFrom() : String\l+ getTo() : String\l+ getType() : String\l+ hashCode() : int\l+ equals(arg0:Object) : boolean\l+ getDes() : String\l+ setDes(arg0:String) : void\l+ isVisible() : boolean\l+ setVisible(arg0:boolean) : void\l}"
];
SequenceMethodVisitor [
shape="record",
label = "{SequenceMethodVisitor|- m : IMethod\l- className : String\l|+ init(arg0:int,arg1:IMethod,arg2:String) : void\l+ init(arg0:int,arg1:ClassVisitor,arg2:IMethod,arg3:String) : void\l+ visitMethod(arg0:int,arg1:String,arg2:String,arg3:String,arg4:String[]) : MethodVisitor\l addAccessLevel(arg0:int) : String\l addReturnType(arg0:String) : String\l addArguments(arg0:String) : List\l access$0(arg0:SequenceMethodVisitor) : IMethod\l}"
];
Window [
shape="record",
style="filled"
fillcolor="yellow"
label = "{Window\n\<\<Leaf\>\>\n| warningString : String\l icons : List\l- temporaryLostComponent : Component\l systemSyncLWRequests : boolean\l syncLWRequests : boolean\l beforeFirstShow : boolean\l- disposing : boolean\l disposerRecord : Window$WindowDisposerRecord\l OPENED : int\l state : int\l- alwaysOnTop : boolean\l- allWindows : IdentityArrayList\l ownedWindowList : Vector\l- weakThis : WeakReference\l showWithParent : boolean\l modalBlocker : Dialog\l modalExclusionType : Dialog$ModalExclusionType\l windowListener : WindowListener\l windowStateListener : WindowStateListener\l windowFocusListener : WindowFocusListener\l inputContext : InputContext\l- inputContextLock : Object\l- focusMgr : FocusManager\l- focusableWindowState : boolean\l- autoRequestFocus : boolean\l isInShow : boolean\l- opacity : float\l- shape : Shape\l- base : String\l- nameCounter : int\l- serialVersionUID : long\l- log : PlatformLogger\l- locationByPlatformProp : boolean\l isTrayIconWindow : boolean\l- securityWarningWidth : int\l- securityWarningHeight : int\l- securityWarningPointX : double\l- securityWarningPointY : double\l- securityWarningAlignmentX : float\l- securityWarningAlignmentY : float\l anchor : Object\l- beforeFirstWindowShown : AtomicBoolean\l- type : Window$Type\l- windowSerializedDataVersion : int\l- locationByPlatform : boolean\l|- initIDs() : void\l init(arg0:GraphicsConfiguration) : void\l- initGC(arg0:GraphicsConfiguration) : GraphicsConfiguration\l- init(arg0:GraphicsConfiguration) : void\l init() : void throws HeadlessException\l+ init(arg0:Frame) : void\l+ init(arg0:Window) : void\l+ init(arg0:Window,arg1:GraphicsConfiguration) : void\l- ownedInit(arg0:Window) : void\l constructComponentName() : String\l+ getIconImages() : List\l+ setIconImages(arg0:List) : void\l+ setIconImage(arg0:Image) : void\l+ addNotify() : void\l+ removeNotify() : void\l+ pack() : void\l+ setMinimumSize(arg0:Dimension) : void\l+ setSize(arg0:Dimension) : void\l+ setSize(arg0:int,arg1:int) : void\l+ setLocation(arg0:int,arg1:int) : void\l+ setLocation(arg0:Point) : void\l+ reshape(arg0:int,arg1:int,arg2:int,arg3:int) : void\l setClientSize(arg0:int,arg1:int) : void\l closeSplashScreen() : void\l+ setVisible(arg0:boolean) : void\l+ show() : void\l updateChildFocusableWindowState(arg0:Window) : void\l postWindowEvent(arg0:int) : void\l+ hide() : void\l clearMostRecentFocusOwnerOnHide() : void\l+ dispose() : void\l disposeImpl() : void\l doDispose() : void\l adjustListeningChildrenOnParent(arg0:long,arg1:int) : void\l adjustDecendantsOnParent(arg0:int) : void\l+ toFront() : void\l toFront_NoClientCode() : void\l+ toBack() : void\l toBack_NoClientCode() : void\l+ getToolkit() : Toolkit\l+ getWarningString() : String\l- setWarningString() : void\l+ getLocale() : Locale\l+ getInputContext() : InputContext\l+ setCursor(arg0:Cursor) : void\l+ getOwner() : Window\l getOwner_NoClientCode() : Window\l+ getOwnedWindows() : Window[]\l getOwnedWindows_NoClientCode() : Window[]\l isModalBlocked() : boolean\l setModalBlocked(arg0:Dialog,arg1:boolean,arg2:boolean) : void\l getModalBlocker() : Dialog\l getAllWindows() : IdentityArrayList\l getAllUnblockedWindows() : IdentityArrayList\l- getWindows(arg0:AppContext) : Window[]\l+ getWindows() : Window[]\l+ getOwnerlessWindows() : Window[]\l getDocumentRoot() : Window\l+ setModalExclusionType(arg0:Dialog$ModalExclusionType) : void\l+ getModalExclusionType() : Dialog$ModalExclusionType\l isModalExcluded(arg0:Dialog$ModalExclusionType) : boolean\l updateChildrenBlocking() : void\l+ addWindowListener(arg0:WindowListener) : void\l+ addWindowStateListener(arg0:WindowStateListener) : void\l+ addWindowFocusListener(arg0:WindowFocusListener) : void\l+ removeWindowListener(arg0:WindowListener) : void\l+ removeWindowStateListener(arg0:WindowStateListener) : void\l+ removeWindowFocusListener(arg0:WindowFocusListener) : void\l+ getWindowListeners() : WindowListener[]\l+ getWindowFocusListeners() : WindowFocusListener[]\l+ getWindowStateListeners() : WindowStateListener[]\l+ getListeners(arg0:Class) : EventListener[]\l eventEnabled(arg0:AWTEvent) : boolean\l# processEvent(arg0:AWTEvent) : void\l# processWindowEvent(arg0:WindowEvent) : void\l# processWindowFocusEvent(arg0:WindowEvent) : void\l# processWindowStateEvent(arg0:WindowEvent) : void\l preProcessKeyEvent(arg0:KeyEvent) : void\l postProcessKeyEvent(arg0:KeyEvent) : void\l+ setAlwaysOnTop(arg0:boolean) : void throws SecurityException\l- setOwnedWindowsAlwaysOnTop(arg0:boolean) : void\l+ isAlwaysOnTopSupported() : boolean\l+ isAlwaysOnTop() : boolean\l+ getFocusOwner() : Component\l+ getMostRecentFocusOwner() : Component\l+ isActive() : boolean\l+ isFocused() : boolean\l+ getFocusTraversalKeys(arg0:int) : Set\l+ setFocusCycleRoot(arg0:boolean) : void\l+ isFocusCycleRoot() : boolean\l+ getFocusCycleRootAncestor() : Container\l+ isFocusableWindow() : boolean\l+ getFocusableWindowState() : boolean\l+ setFocusableWindowState(arg0:boolean) : void\l+ setAutoRequestFocus(arg0:boolean) : void\l+ isAutoRequestFocus() : boolean\l+ addPropertyChangeListener(arg0:PropertyChangeListener) : void\l+ addPropertyChangeListener(arg0:String,arg1:PropertyChangeListener) : void\l+ isValidateRoot() : boolean\l dispatchEventImpl(arg0:AWTEvent) : void\l+ postEvent(arg0:Event) : boolean\l+ isShowing() : boolean\l isDisposing() : boolean\l+ applyResourceBundle(arg0:ResourceBundle) : void\l+ applyResourceBundle(arg0:String) : void\l addOwnedWindow(arg0:WeakReference) : void\l removeOwnedWindow(arg0:WeakReference) : void\l connectOwnedWindow(arg0:Window) : void\l- addToWindowList() : void\l- removeFromWindowList(arg0:AppContext,arg1:WeakReference) : void\l- removeFromWindowList() : void\l+ setType(arg0:Window$Type) : void\l+ getType() : Window$Type\l- writeObject(arg0:ObjectOutputStream) : void throws IOException\l- initDeserializedWindow() : void\l- deserializeResources(arg0:ObjectInputStream) : void throws ClassNotFoundException,IOException,HeadlessException\l- readObject(arg0:ObjectInputStream) : void throws ClassNotFoundException,IOException,HeadlessException\l+ getAccessibleContext() : AccessibleContext\l setGraphicsConfiguration(arg0:GraphicsConfiguration) : void\l+ setLocationRelativeTo(arg0:Component) : void\l deliverMouseWheelToAncestor(arg0:MouseWheelEvent) : void\l dispatchMouseWheelToAncestor(arg0:MouseWheelEvent) : boolean\l+ createBufferStrategy(arg0:int) : void\l+ createBufferStrategy(arg0:int,arg1:BufferCapabilities) : void throws AWTException\l+ getBufferStrategy() : BufferStrategy\l getTemporaryLostComponent() : Component\l setTemporaryLostComponent(arg0:Component) : Component\l canContainFocusOwner(arg0:Component) : boolean\l+ setLocationByPlatform(arg0:boolean) : void\l+ isLocationByPlatform() : boolean\l+ setBounds(arg0:int,arg1:int,arg2:int,arg3:int) : void\l+ setBounds(arg0:Rectangle) : void\l isRecursivelyVisible() : boolean\l+ getOpacity() : float\l+ setOpacity(arg0:float) : void\l+ getShape() : Shape\l+ setShape(arg0:Shape) : void\l+ getBackground() : Color\l+ setBackground(arg0:Color) : void\l+ isOpaque() : boolean\l- updateWindow() : void\l+ paint(arg0:Graphics) : void\l- setLayersOpaque(arg0:Component,arg1:boolean) : void\l getContainer() : Container\l applyCompoundShape(arg0:Region) : void\l applyCurrentShape() : void\l mixOnReshaping() : void\l getLocationOnWindow() : Point\l- limit(arg0:double,arg1:double,arg2:double) : double\l- calculateSecurityWarningPosition(arg0:double,arg1:double,arg2:double,arg3:double) : Point2D\l updateZOrder() : void\l access$000(arg0:Window) : WeakReference\l access$100(arg0:AppContext,arg1:WeakReference) : void\l access$202(arg0:Window,arg1:boolean) : boolean\l access$300(arg0:Window) : Object\l access$400(arg0:Window) : float\l access$500(arg0:Window) : void\l access$600(arg0:Window) : int\l access$700(arg0:Window) : int\l access$602(arg0:Window,arg1:int) : int\l access$702(arg0:Window,arg1:int) : int\l access$802(arg0:Window,arg1:double) : double\l access$902(arg0:Window,arg1:double) : double\l access$1002(arg0:Window,arg1:float) : float\l access$1102(arg0:Window,arg1:float) : float\l access$1200(arg0:Window,arg1:double,arg2:double,arg3:double,arg4:double) : Point2D\l access$1300(arg0:Window) : boolean\l clinit() : void\l}"
];
JFrame [
shape="record",
style="filled"
fillcolor="yellow"
label = "{JFrame\n\<\<Leaf\>\>\n|+ EXIT_ON_CLOSE : int\l- defaultLookAndFeelDecoratedKey : Object\l- defaultCloseOperation : int\l- transferHandler : TransferHandler\l# rootPane : JRootPane\l# rootPaneCheckingEnabled : boolean\l# accessibleContext : AccessibleContext\l|+ init() : void throws HeadlessException\l+ init(arg0:GraphicsConfiguration) : void\l+ init(arg0:String) : void throws HeadlessException\l+ init(arg0:String,arg1:GraphicsConfiguration) : void\l# frameInit() : void\l# createRootPane() : JRootPane\l# processWindowEvent(arg0:WindowEvent) : void\l+ setDefaultCloseOperation(arg0:int) : void\l+ getDefaultCloseOperation() : int\l+ setTransferHandler(arg0:TransferHandler) : void\l+ getTransferHandler() : TransferHandler\l+ update(arg0:Graphics) : void\l+ setJMenuBar(arg0:JMenuBar) : void\l+ getJMenuBar() : JMenuBar\l# isRootPaneCheckingEnabled() : boolean\l# setRootPaneCheckingEnabled(arg0:boolean) : void\l# addImpl(arg0:Component,arg1:Object,arg2:int) : void\l+ remove(arg0:Component) : void\l+ setLayout(arg0:LayoutManager) : void\l+ getRootPane() : JRootPane\l# setRootPane(arg0:JRootPane) : void\l+ setIconImage(arg0:Image) : void\l+ getContentPane() : Container\l+ setContentPane(arg0:Container) : void\l+ getLayeredPane() : JLayeredPane\l+ setLayeredPane(arg0:JLayeredPane) : void\l+ getGlassPane() : Component\l+ setGlassPane(arg0:Component) : void\l+ getGraphics() : Graphics\l+ repaint(arg0:long,arg1:int,arg2:int,arg3:int,arg4:int) : void\l+ setDefaultLookAndFeelDecorated(arg0:boolean) : void\l+ isDefaultLookAndFeelDecorated() : boolean\l# paramString() : String\l+ getAccessibleContext() : AccessibleContext\l clinit() : void\l}"
];
Observer [
shape="record",
label = "{\<\<interface\>\>\nObserver|+ update(arg0:Object) : void\l}"
];
IPattern [
shape="record",
label = "{\<\<interface\>\>\nIPattern|+ getName() : String\l+ getClasses() : Set\l+ addClass(arg0:IClass) : void\l}"
];
ActionListener [
shape="record",
label = "{\<\<interface\>\>\nActionListener|+ actionPerformed(arg0:ActionEvent) : void\l}"
];
Declaration [
shape="record",
label = "{Declaration|- type : String\l- name : String\l- tags : Set\l|+ init(arg0:String,arg1:String) : void\l+ toString() : String\l+ getType() : String\l+ getName() : String\l+ accept(arg0:IVisitor) : void\l+ getTags() : Set\l+ addTag(arg0:String) : void\l}"
];
RootPaneContainer [
shape="record",
label = "{\<\<interface\>\>\nRootPaneContainer|+ getRootPane() : JRootPane\l+ setContentPane(arg0:Container) : void\l+ getContentPane() : Container\l+ setLayeredPane(arg0:JLayeredPane) : void\l+ getLayeredPane() : JLayeredPane\l+ setGlassPane(arg0:Component) : void\l+ getGlassPane() : Component\l}"
];
ClassFieldVisitor [
shape="record",
label = "{ClassFieldVisitor|- c : IClass\l- m : IModel\l|+ init(arg0:int,arg1:IClass,arg2:IModel) : void\l+ init(arg0:int,arg1:ClassVisitor,arg2:IClass,arg3:IModel) : void\l+ visitField(arg0:int,arg1:String,arg2:String,arg3:String,arg4:Object) : FieldVisitor\l}"
];
GraphVizOutputStream [
shape="record",
style="filled"
fillcolor="green"
label = "{GraphVizOutputStream\n\<\<decorator\>\>\n|- visitor : IVisitor\l- result : StringBuffer\l|+ init(arg0:OutputStream) : void throws IOException\l- write(arg0:String) : void\l- writeln(arg0:String) : void\l+ write(arg0:IModel) : void\l+ toString() : String\l+ start() : void\l+ end() : void\l- setupPreVisitClass() : void\l- setupVisitClass() : void\l- setupPostVisitClass() : void\l- setupVisitDeclaration() : void\l+ setupVisitMethod() : void\l- setupVisitField() : void\l+ setupVisitRelation() : void\l access$0(arg0:GraphVizOutputStream,arg1:String) : void\l access$1(arg0:GraphVizOutputStream,arg1:String) : void\l}"
];
IOutputStream [
shape="record",
style="filled"
fillcolor="green"
label = "{IOutputStream\n\<\<decorator\>\>\n|+ init(arg0:OutputStream) : void\l+ start() : void\l+ write(arg0:IMethod) : void\l+ write(arg0:IModel) : void\l+ end() : void\l}"
];
AbstractModelVisitor [
shape="record",
label = "{AbstractModelVisitor|# m : IModel\l- observers : List\l|+ init(arg0:IModel) : void\l+ visitModel() : void\l- setupVisitClass() : void\l- setupVisitMethod() : void\l- setupVisitField() : void\l- setupVisitRelation() : void\l- setupVisitPattern() : void\l# visitClass(arg0:IClass) : void\l# visitMethod(arg0:IMethod) : void\l# visitField(arg0:IField) : void\l# visitPattern(arg0:IPattern) : void\l# visitRelation(arg0:IRelation) : void\l+ registerObserver(arg0:Observer) : void\l+ removeObserver(arg0:Observer) : void\l+ notifyObservers(arg0:Object) : void\l}"
];
MenuContainer [
shape="record",
label = "{\<\<interface\>\>\nMenuContainer|+ getFont() : Font\l+ remove(arg0:MenuComponent) : void\l+ postEvent(arg0:Event) : boolean\l}"
];
ITraverser [
shape="record",
label = "{\<\<interface\>\>\nITraverser|+ accept(arg0:IVisitor) : void\l}"
];
BufferedReader [
shape="record",
style="filled"
fillcolor="green"
label = "{BufferedReader\n\<\<decorator\>\>\n|- in : Reader\l- cb : char[]\l- nChars : int\l- nextChar : int\l- INVALIDATED : int\l- UNMARKED : int\l- markedChar : int\l- readAheadLimit : int\l- skipLF : boolean\l- markedSkipLF : boolean\l- defaultCharBufferSize : int\l- defaultExpectedLineLength : int\l|+ init(arg0:Reader,arg1:int) : void\l+ init(arg0:Reader) : void\l- ensureOpen() : void throws IOException\l- fill() : void throws IOException\l+ read() : int throws IOException\l- read1(arg0:char[],arg1:int,arg2:int) : int throws IOException\l+ read(arg0:char[],arg1:int,arg2:int) : int throws IOException\l readLine(arg0:boolean) : String throws IOException\l+ readLine() : String throws IOException\l+ skip(arg0:long) : long throws IOException\l+ ready() : boolean throws IOException\l+ markSupported() : boolean\l+ mark(arg0:int) : void throws IOException\l+ reset() : void throws IOException\l+ close() : void throws IOException\l+ lines() : Stream\l clinit() : void\l}"
];
LandingPage [
shape="record",
style="filled"
fillcolor="yellow"
label = "{LandingPage\n\<\<Leaf\>\>\n|- fw : Framework\l- serialVersionUID : long\l- FIXED_WIDTH : int\l- FIXED_HEIGHT : int\l- INITAL_SIZE : Dimension\l- message : JLabel\l- progressBar : JProgressBar\l| clinit() : void\l+ init() : void throws FileNotFoundException,IOException\l+ loadConfig(arg0:String) : void throws IOException\l+ Analyze() : void throws Exception\l+ update(arg0:Object) : void\l access$0(arg0:LandingPage) : Framework\l}"
];
WindowConstants [
shape="record",
label = "{\<\<interface\>\>\nWindowConstants|+ DO_NOTHING_ON_CLOSE : int\l+ HIDE_ON_CLOSE : int\l+ DISPOSE_ON_CLOSE : int\l+ EXIT_ON_CLOSE : int\l}"
];
AboutFrame [
shape="record",
style="filled"
fillcolor="yellow"
label = "{AboutFrame\n\<\<Leaf\>\>\n|- serialVersionUID : long\l- FIXED_WIDTH : int\l- FIXED_HEIGHT : int\l- INITAL_SIZE : Dimension\l| clinit() : void\l+ init() : void\l}"
];
ClassVisitor [
shape="record",
label = "{ClassVisitor|# api : int\l# cv : ClassVisitor\l|+ init(arg0:int) : void\l+ init(arg0:int,arg1:ClassVisitor) : void\l+ visit(arg0:int,arg1:int,arg2:String,arg3:String,arg4:String,arg5:String[]) : void\l+ visitSource(arg0:String,arg1:String) : void\l+ visitOuterClass(arg0:String,arg1:String,arg2:String) : void\l+ visitAnnotation(arg0:String,arg1:boolean) : AnnotationVisitor\l+ visitTypeAnnotation(arg0:int,arg1:TypePath,arg2:String,arg3:boolean) : AnnotationVisitor\l+ visitAttribute(arg0:Attribute) : void\l+ visitInnerClass(arg0:String,arg1:String,arg2:String,arg3:int) : void\l+ visitField(arg0:int,arg1:String,arg2:String,arg3:String,arg4:Object) : FieldVisitor\l+ visitMethod(arg0:int,arg1:String,arg2:String,arg3:String,arg4:String[]) : MethodVisitor\l+ visitEnd() : void\l}"
];
DotExecuter [
shape="record",
label = "{DotExecuter|- inputPath : String\l- outputPath : String\l- dotPath : String\l|+ init(arg0:String,arg1:String,arg2:String) : void\l+ execute() : void throws IOException,InterruptedException\l}"
];
IVisitMethod [
shape="record",
label = "{\<\<interface\>\>\nIVisitMethod|+ execute(arg0:ITraverser) : void\l}"
];
AutoCloseable [
shape="record",
label = "{\<\<interface\>\>\nAutoCloseable|+ close() : void throws Exception\l}"
];
Framework [
shape="record",
label = "{Framework|- LOADING_CLASS_NAMES : double\l- LOADING_INPUT_CLASSES : double\l- LOADING_CLASSES_FROM_FOLDER : double\l- PATTERN_DETECTION : double\l- GENERATE_DOT : double\l- CLASS_LOADING : String\l- DECORATOR_DETECTION : String\l- COMPOSITE_DETECTION : String\l- ADAPTER_DETECTION : String\l- SINGLETON_DETECTION : String\l- DOT_GENERATION : String\l- reader : TMXXreader\l- classes : List\l- detectors : Set\l- out : IOutputStream\l- model : IModel\l- start : IMethod\l- observers : List\l- box : Framework$ProgressBox\l|+ init() : void throws FileNotFoundException,IOException\l+ loadConfig(arg0:String) : void\l- changeProgress(arg0:String,arg1:double) : void\l- addDetector(arg0:IDetector) : void\l- addDetectors(arg0:double) : void\l- detectPatterns(arg0:double) : void throws Exception\l+ Analyze() : void throws Exception\l- processPhases() : void throws Exception\l- detectPattern() : void throws Exception\l- loadClassNames() : List\l+ toString() : String\l+ registerObserver(arg0:Observer) : void\l+ removeObserver(arg0:Observer) : void\l+ notifyObservers(arg0:Object) : void\l- loadClassFromInputFolder() : void throws IOException\l- loadInputClasses() : void throws IOException\l- loadClassRecur() : void throws IOException\l}"
];
Notifier [
shape="record",
label = "{\<\<interface\>\>\nNotifier|+ registerObserver(arg0:Observer) : void\l+ removeObserver(arg0:Observer) : void\l+ notifyObservers(arg0:Object) : void\l}"
];
UMLImageProxy [
shape="record",
label = "{UMLImageProxy| imageIcon : ImageIcon\l outputPath : String\l reader : TMXXreader\l retrievalThread : Thread\l retrieving : boolean\l|+ init(arg0:TMXXreader) : void\l+ paintIcon(arg0:Component,arg1:Graphics,arg2:int,arg3:int) : void\l+ clearImageIcon() : void\l+ getIconWidth() : int\l+ getIconHeight() : int\l}"
];
JComponent [
shape="record",
style="filled"
fillcolor="yellow"
label = "{JComponent\n\<\<Leaf\>\>\n|- uiClassID : String\l- readObjectCallbacks : Hashtable\l- managingFocusForwardTraversalKeys : Set\l- managingFocusBackwardTraversalKeys : Set\l- NOT_OBSCURED : int\l- PARTIALLY_OBSCURED : int\l- COMPLETELY_OBSCURED : int\l DEBUG_GRAPHICS_LOADED : boolean\l- INPUT_VERIFIER_SOURCE_KEY : Object\l- isAlignmentXSet : boolean\l- alignmentX : float\l- isAlignmentYSet : boolean\l- alignmentY : float\l# ui : ComponentUI\l# listenerList : EventListenerList\l- clientProperties : ArrayTable\l- vetoableChangeSupport : VetoableChangeSupport\l- autoscrolls : boolean\l- border : Border\l- flags : int\l- inputVerifier : InputVerifier\l- verifyInputWhenFocusTarget : boolean\l paintingChild : Component\l+ WHEN_FOCUSED : int\l+ WHEN_ANCESTOR_OF_FOCUSED_COMPONENT : int\l+ WHEN_IN_FOCUSED_WINDOW : int\l+ UNDEFINED_CONDITION : int\l- KEYBOARD_BINDINGS_KEY : String\l- WHEN_IN_FOCUSED_WINDOW_BINDINGS : String\l+ TOOL_TIP_TEXT_KEY : String\l- NEXT_FOCUS : String\l- popupMenu : JPopupMenu\l- IS_DOUBLE_BUFFERED : int\l- ANCESTOR_USING_BUFFER : int\l- IS_PAINTING_TILE : int\l- IS_OPAQUE : int\l- KEY_EVENTS_ENABLED : int\l- FOCUS_INPUTMAP_CREATED : int\l- ANCESTOR_INPUTMAP_CREATED : int\l- WIF_INPUTMAP_CREATED : int\l- ACTIONMAP_CREATED : int\l- CREATED_DOUBLE_BUFFER : int\l- IS_PRINTING : int\l- IS_PRINTING_ALL : int\l- IS_REPAINTING : int\l- WRITE_OBJ_COUNTER_FIRST : int\l- RESERVED_1 : int\l- RESERVED_2 : int\l- RESERVED_3 : int\l- RESERVED_4 : int\l- RESERVED_5 : int\l- RESERVED_6 : int\l- WRITE_OBJ_COUNTER_LAST : int\l- REQUEST_FOCUS_DISABLED : int\l- INHERITS_POPUP_MENU : int\l- OPAQUE_SET : int\l- AUTOSCROLLS_SET : int\l- FOCUS_TRAVERSAL_KEYS_FORWARD_SET : int\l- FOCUS_TRAVERSAL_KEYS_BACKWARD_SET : int\l- revalidateRunnableScheduled : AtomicBoolean\l- tempRectangles : List\l- focusInputMap : InputMap\l- ancestorInputMap : InputMap\l- windowInputMap : ComponentInputMap\l- actionMap : ActionMap\l- defaultLocale : String\l- componentObtainingGraphicsFrom : Component\l- componentObtainingGraphicsFromLock : Object\l- aaTextInfo : Object\l focusController : RequestFocusController\l| safelyGetGraphics(arg0:Component) : Graphics\l safelyGetGraphics(arg0:Component,arg1:Component) : Graphics\l getGraphicsInvoked(arg0:Component) : void\l- isComponentObtainingGraphicsFrom(arg0:Component) : boolean\l getManagingFocusForwardTraversalKeys() : Set\l getManagingFocusBackwardTraversalKeys() : Set\l- fetchRectangle() : Rectangle\l- recycleRectangle(arg0:Rectangle) : void\l+ setInheritsPopupMenu(arg0:boolean) : void\l+ getInheritsPopupMenu() : boolean\l+ setComponentPopupMenu(arg0:JPopupMenu) : void\l+ getComponentPopupMenu() : JPopupMenu\l+ init() : void\l+ updateUI() : void\l# setUI(arg0:ComponentUI) : void\l- uninstallUIAndProperties() : void\l+ getUIClassID() : String\l# getComponentGraphics(arg0:Graphics) : Graphics\l# paintComponent(arg0:Graphics) : void\l# paintChildren(arg0:Graphics) : void\l# paintBorder(arg0:Graphics) : void\l+ update(arg0:Graphics) : void\l+ paint(arg0:Graphics) : void\l paintForceDoubleBuffered(arg0:Graphics) : void\l isPainting() : boolean\l- adjustPaintFlags() : void\l+ printAll(arg0:Graphics) : void\l+ print(arg0:Graphics) : void\l# printComponent(arg0:Graphics) : void\l# printChildren(arg0:Graphics) : void\l# printBorder(arg0:Graphics) : void\l+ isPaintingTile() : boolean\l+ isPaintingForPrint() : boolean\l+ isManagingFocus() : boolean\l- registerNextFocusableComponent() : void\l- registerNextFocusableComponent(arg0:Component) : void\l- deregisterNextFocusableComponent() : void\l+ setNextFocusableComponent(arg0:Component) : void\l+ getNextFocusableComponent() : Component\l+ setRequestFocusEnabled(arg0:boolean) : void\l+ isRequestFocusEnabled() : boolean\l+ requestFocus() : void\l+ requestFocus(arg0:boolean) : boolean\l+ requestFocusInWindow() : boolean\l# requestFocusInWindow(arg0:boolean) : boolean\l+ grabFocus() : void\l+ setVerifyInputWhenFocusTarget(arg0:boolean) : void\l+ getVerifyInputWhenFocusTarget() : boolean\l+ getFontMetrics(arg0:Font) : FontMetrics\l+ setPreferredSize(arg0:Dimension) : void\l+ getPreferredSize() : Dimension\l+ setMaximumSize(arg0:Dimension) : void\l+ getMaximumSize() : Dimension\l+ setMinimumSize(arg0:Dimension) : void\l+ getMinimumSize() : Dimension\l+ contains(arg0:int,arg1:int) : boolean\l+ setBorder(arg0:Border) : void\l+ getBorder() : Border\l+ getInsets() : Insets\l+ getInsets(arg0:Insets) : Insets\l+ getAlignmentY() : float\l+ setAlignmentY(arg0:float) : void\l+ getAlignmentX() : float\l+ setAlignmentX(arg0:float) : void\l+ setInputVerifier(arg0:InputVerifier) : void\l+ getInputVerifier() : InputVerifier\l+ getGraphics() : Graphics\l+ setDebugGraphicsOptions(arg0:int) : void\l+ getDebugGraphicsOptions() : int\l shouldDebugGraphics() : int\l+ registerKeyboardAction(arg0:ActionListener,arg1:String,arg2:KeyStroke,arg3:int) : void\l- registerWithKeyboardManager(arg0:boolean) : void\l- unregisterWithKeyboardManager() : void\l componentInputMapChanged(arg0:ComponentInputMap) : void\l- registerWithKeyboardManager(arg0:KeyStroke) : void\l- unregisterWithKeyboardManager(arg0:KeyStroke) : void\l+ registerKeyboardAction(arg0:ActionListener,arg1:KeyStroke,arg2:int) : void\l+ unregisterKeyboardAction(arg0:KeyStroke) : void\l+ getRegisteredKeyStrokes() : KeyStroke[]\l+ getConditionForKeyStroke(arg0:KeyStroke) : int\l+ getActionForKeyStroke(arg0:KeyStroke) : ActionListener\l+ resetKeyboardActions() : void\l+ setInputMap(arg0:int,arg1:InputMap) : void\l+ getInputMap(arg0:int) : InputMap\l+ getInputMap() : InputMap\l+ setActionMap(arg0:ActionMap) : void\l+ getActionMap() : ActionMap\l getInputMap(arg0:int,arg1:boolean) : InputMap\l getActionMap(arg0:boolean) : ActionMap\l+ getBaseline(arg0:int,arg1:int) : int\l+ getBaselineResizeBehavior() : Component$BaselineResizeBehavior\l+ requestDefaultFocus() : boolean\l+ setVisible(arg0:boolean) : void\l+ setEnabled(arg0:boolean) : void\l+ setForeground(arg0:Color) : void\l+ setBackground(arg0:Color) : void\l+ setFont(arg0:Font) : void\l+ getDefaultLocale() : Locale\l+ setDefaultLocale(arg0:Locale) : void\l# processComponentKeyEvent(arg0:KeyEvent) : void\l# processKeyEvent(arg0:KeyEvent) : void\l# processKeyBinding(arg0:KeyStroke,arg1:KeyEvent,arg2:int,arg3:boolean) : boolean\l processKeyBindings(arg0:KeyEvent,arg1:boolean) : boolean\l processKeyBindingsForAllComponents(arg0:KeyEvent,arg1:Container,arg2:boolean) : boolean\l+ setToolTipText(arg0:String) : void\l+ getToolTipText() : String\l+ getToolTipText(arg0:MouseEvent) : String\l+ getToolTipLocation(arg0:MouseEvent) : Point\l+ getPopupLocation(arg0:MouseEvent) : Point\l+ createToolTip() : JToolTip\l+ scrollRectToVisible(arg0:Rectangle) : void\l+ setAutoscrolls(arg0:boolean) : void\l+ getAutoscrolls() : boolean\l+ setTransferHandler(arg0:TransferHandler) : void\l+ getTransferHandler() : TransferHandler\l dropLocationForPoint(arg0:Point) : TransferHandler$DropLocation\l setDropLocation(arg0:TransferHandler$DropLocation,arg1:Object,arg2:boolean) : Object\l dndDone() : void\l# processMouseEvent(arg0:MouseEvent) : void\l# processMouseMotionEvent(arg0:MouseEvent) : void\l superProcessMouseMotionEvent(arg0:MouseEvent) : void\l setCreatedDoubleBuffer(arg0:boolean) : void\l getCreatedDoubleBuffer() : boolean\l+ enable() : void\l+ disable() : void\l- getClientProperties() : ArrayTable\l+ getClientProperty(arg0:Object) : Object\l+ putClientProperty(arg0:Object,arg1:Object) : void\l clientPropertyChanged(arg0:Object,arg1:Object,arg2:Object) : void\l setUIProperty(arg0:String,arg1:Object) : void\l+ setFocusTraversalKeys(arg0:int,arg1:Set) : void\l+ isLightweightComponent(arg0:Component) : boolean\l+ reshape(arg0:int,arg1:int,arg2:int,arg3:int) : void\l+ getBounds(arg0:Rectangle) : Rectangle\l+ getSize(arg0:Dimension) : Dimension\l+ getLocation(arg0:Point) : Point\l+ getX() : int\l+ getY() : int\l+ getWidth() : int\l+ getHeight() : int\l+ isOpaque() : boolean\l+ setOpaque(arg0:boolean) : void\l rectangleIsObscured(arg0:int,arg1:int,arg2:int,arg3:int) : boolean\l computeVisibleRect(arg0:Component,arg1:Rectangle) : void\l+ computeVisibleRect(arg0:Rectangle) : void\l+ getVisibleRect() : Rectangle\l+ firePropertyChange(arg0:String,arg1:boolean,arg2:boolean) : void\l+ firePropertyChange(arg0:String,arg1:int,arg2:int) : void\l+ firePropertyChange(arg0:String,arg1:char,arg2:char) : void\l# fireVetoableChange(arg0:String,arg1:Object,arg2:Object) : void throws PropertyVetoException\l+ addVetoableChangeListener(arg0:VetoableChangeListener) : void\l+ removeVetoableChangeListener(arg0:VetoableChangeListener) : void\l+ getVetoableChangeListeners() : VetoableChangeListener[]\l+ getTopLevelAncestor() : Container\l- getAncestorNotifier() : AncestorNotifier\l+ addAncestorListener(arg0:AncestorListener) : void\l+ removeAncestorListener(arg0:AncestorListener) : void\l+ getAncestorListeners() : AncestorListener[]\l+ getListeners(arg0:Class) : EventListener[]\l+ addNotify() : void\l+ removeNotify() : void\l+ repaint(arg0:long,arg1:int,arg2:int,arg3:int,arg4:int) : void\l+ repaint(arg0:Rectangle) : void\l+ revalidate() : void\l+ isValidateRoot() : boolean\l+ isOptimizedDrawingEnabled() : boolean\l# isPaintingOrigin() : boolean\l+ paintImmediately(arg0:int,arg1:int,arg2:int,arg3:int) : void\l+ paintImmediately(arg0:Rectangle) : void\l alwaysOnTop() : boolean\l setPaintingChild(arg0:Component) : void\l _paintImmediately(arg0:int,arg1:int,arg2:int,arg3:int) : void\l paintToOffscreen(arg0:Graphics,arg1:int,arg2:int,arg3:int,arg4:int,arg5:int,arg6:int) : void\l- getObscuredState(arg0:int,arg1:int,arg2:int,arg3:int,arg4:int) : int\l checkIfChildObscuredBySibling() : boolean\l- setFlag(arg0:int,arg1:boolean) : void\l- getFlag(arg0:int) : boolean\l setWriteObjCounter(arg0:JComponent,arg1:byte) : void\l getWriteObjCounter(arg0:JComponent) : byte\l+ setDoubleBuffered(arg0:boolean) : void\l+ isDoubleBuffered() : boolean\l+ getRootPane() : JRootPane\l compWriteObjectNotify() : void\l- readObject(arg0:ObjectInputStream) : void throws IOException,ClassNotFoundException\l- writeObject(arg0:ObjectOutputStream) : void throws IOException\l# paramString() : String\l+ hide() : void\l- lambda$revalidate$59() : void\l access$100() : Object\l access$200(arg0:JComponent) : AccessibleContext\l access$300(arg0:JComponent) : AccessibleContext\l access$400(arg0:JComponent) : AccessibleContext\l access$500(arg0:JComponent) : AccessibleContext\l access$600() : Hashtable\l clinit() : void\l}"
];
Reader [
shape="record",
style="filled"
fillcolor="green"
label = "{Reader\n\<\<component\>\>\n|# lock : Object\l- maxSkipBufferSize : int\l- skipBuffer : char[]\l|# init() : void\l# init(arg0:Object) : void\l+ read(arg0:CharBuffer) : int throws IOException\l+ read() : int throws IOException\l+ read(arg0:char[]) : int throws IOException\l+ read(arg0:char[],arg1:int,arg2:int) : int throws IOException\l+ skip(arg0:long) : long throws IOException\l+ ready() : boolean throws IOException\l+ markSupported() : boolean\l+ mark(arg0:int) : void throws IOException\l+ reset() : void throws IOException\l+ close() : void throws IOException\l}"
];
GraphVizVistor [
shape="record",
label = "{GraphVizVistor|+ init() : void\l}"
];
Pattern [
shape="record",
label = "{Pattern|- name : String\l- classes : Set\l|+ init(arg0:String) : void\l+ getName() : String\l+ getClasses() : Set\l+ addClass(arg0:IClass) : void\l+ toString() : String\l+ accept(arg0:IVisitor) : void\l}"
];
Accessible [
shape="record",
label = "{\<\<interface\>\>\nAccessible|+ getAccessibleContext() : AccessibleContext\l}"
];
Comparable [
shape="record",
label = "{\<\<interface\>\>\nComparable|+ compareTo(arg0:Object) : int\l}"
];
IField [
shape="record",
label = "{\<\<interface\>\>\nIField|+ getName() : String\l+ getType() : String\l+ getAccess() : String\l+ getClassName() : String\l+ isStatic() : boolean\l+ setStatic(arg0:boolean) : void\l+ getInnerType() : String\l+ setInnerType(arg0:String) : void\l}"
];
NewBeeFramework [
shape="record",
label = "{NewBeeFramework|- model : IModel\l- start : IMethod\l- appType : String\l- cs : List\l- additionalClasses : List\l- detectors : Set\l- out : IOutputStream\l|+ init(arg0:String,arg1:List,arg2:List,arg3:IOutputStream) : void\l+ addDetector(arg0:IDetector) : void\l+ processAll() : void throws Exception\l+ detectPattern() : void throws Exception\l+ setStartMethod(arg0:IMethod) : void\l+ loadClass() : void throws IOException\l- loadClassNonRecur() : void throws IOException\l- loadClassRecur() : void throws IOException\l- loadMethodCallRelations() : void throws IOException\l+ readClassAndMethods(arg0:IMethod,arg1:int,arg2:List) : void throws IOException\l+ writeOutput() : void\l}"
];
IDetector [
shape="record",
label = "{\<\<interface\>\>\nIDetector|+ detect(arg0:IModel) : void throws Exception\l}"
];
IRelation [
shape="record",
label = "{\<\<interface\>\>\nIRelation|+ getFrom() : String\l+ getTo() : String\l+ getType() : String\l+ getDes() : String\l+ setDes(arg0:String) : void\l+ isVisible() : boolean\l+ setVisible(arg0:boolean) : void\l}"
];
Flushable [
shape="record",
label = "{\<\<interface\>\>\nFlushable|+ flush() : void throws IOException\l}"
];
Closeable [
shape="record",
label = "{\<\<interface\>\>\nCloseable|+ close() : void throws IOException\l}"
];
Method [
shape="record",
style="filled"
fillcolor="red"
style="filled"
fillcolor="yellow"
label = "{Method\n\<\<adapter\>\>\n\n\<\<Composite\>\>\n|- name : String\l- type : String\l- access : String\l- params : List\l- exceptions : List\l- className : String\l- calls : List\l- parent : IMethod\l- isStatic : boolean\l|+ init(arg0:String,arg1:String,arg2:String,arg3:List,arg4:List,arg5:String) : void\l+ toString() : String\l+ getName() : String\l+ getReturnType() : String\l+ getAccess() : String\l+ getExceptions() : List\l+ getParamTypes() : List\l+ accept(arg0:IVisitor) : void\l+ getClassName() : String\l+ hashCode() : int\l+ equals(arg0:Object) : boolean\l+ getCalls() : List\l+ addCall(arg0:IMethod) : void\l+ setClassName(arg0:String) : void\l+ setReturnType(arg0:String) : void\l+ compareMethod(arg0:IMethod) : boolean\l+ printCallChains(arg0:int) : String\l+ setParent(arg0:IMethod) : void\l+ getParent() : IMethod\l+ isStatic() : boolean\l+ setStatic(arg0:boolean) : void\l}"
];
AdapterDetector [
shape="record",
label = "{AdapterDetector|- threshold : int\l|+ init(arg0:int) : void\l+ toString() : String\l+ detect(arg0:IModel) : void throws Exception\l- checkConstructor(arg0:String,arg1:IClass) : boolean\l- constructPattern(arg0:String,arg1:IClass,arg2:IClass,arg3:IModel) : void throws IOException\l- intersection(arg0:List,arg1:List) : List\l- getClassByName(arg0:IModel,arg1:String) : IClass\l- getInterfaces(arg0:IClass,arg1:Set) : Set\l}"
];
ClassDeclarationVisitor [
shape="record",
label = "{ClassDeclarationVisitor|- c : IClass\l- m : IModel\l- cs : List\l|+ init(arg0:int,arg1:IClass,arg2:IModel) : void\l+ init(arg0:int,arg1:IClass,arg2:IModel,arg3:List) : void\l+ visit(arg0:int,arg1:int,arg2:String,arg3:String,arg4:String,arg5:String[]) : void\l}"
];
Icon [
shape="record",
label = "{\<\<interface\>\>\nIcon|+ paintIcon(arg0:Component,arg1:Graphics,arg2:int,arg3:int) : void\l+ getIconWidth() : int\l+ getIconHeight() : int\l}"
];
Component [
shape="record",
style="filled"
fillcolor="yellow"
label = "{Component\n\<\<Component\>\>\n|- log : PlatformLogger\l- eventLog : PlatformLogger\l- focusLog : PlatformLogger\l- mixingLog : PlatformLogger\l peer : ComponentPeer\l parent : Container\l appContext : AppContext\l x : int\l y : int\l width : int\l height : int\l foreground : Color\l background : Color\l font : Font\l peerFont : Font\l cursor : Cursor\l locale : Locale\l- graphicsConfig : GraphicsConfiguration\l bufferStrategy : BufferStrategy\l ignoreRepaint : boolean\l visible : boolean\l enabled : boolean\l- valid : boolean\l dropTarget : DropTarget\l popups : Vector\l- name : String\l- nameExplicitlySet : boolean\l- focusable : boolean\l- FOCUS_TRAVERSABLE_UNKNOWN : int\l- FOCUS_TRAVERSABLE_DEFAULT : int\l- FOCUS_TRAVERSABLE_SET : int\l- isFocusTraversableOverridden : int\l focusTraversalKeys : Set[]\l- focusTraversalKeyPropertyNames : String[]\l- focusTraversalKeysEnabled : boolean\l LOCK : Object\l- acc : AccessControlContext\l minSize : Dimension\l minSizeSet : boolean\l prefSize : Dimension\l prefSizeSet : boolean\l maxSize : Dimension\l maxSizeSet : boolean\l componentOrientation : ComponentOrientation\l newEventsOnly : boolean\l componentListener : ComponentListener\l focusListener : FocusListener\l hierarchyListener : HierarchyListener\l hierarchyBoundsListener : HierarchyBoundsListener\l keyListener : KeyListener\l mouseListener : MouseListener\l mouseMotionListener : MouseMotionListener\l mouseWheelListener : MouseWheelListener\l inputMethodListener : InputMethodListener\l windowClosingException : RuntimeException\l actionListenerK : String\l adjustmentListenerK : String\l componentListenerK : String\l containerListenerK : String\l focusListenerK : String\l itemListenerK : String\l keyListenerK : String\l mouseListenerK : String\l mouseMotionListenerK : String\l mouseWheelListenerK : String\l textListenerK : String\l ownedWindowK : String\l windowListenerK : String\l inputMethodListenerK : String\l hierarchyListenerK : String\l hierarchyBoundsListenerK : String\l windowStateListenerK : String\l windowFocusListenerK : String\l eventMask : long\l isInc : boolean\l incRate : int\l+ TOP_ALIGNMENT : float\l+ CENTER_ALIGNMENT : float\l+ BOTTOM_ALIGNMENT : float\l+ LEFT_ALIGNMENT : float\l+ RIGHT_ALIGNMENT : float\l- serialVersionUID : long\l- changeSupport : PropertyChangeSupport\l- objectLock : Object\l isPacked : boolean\l- boundsOp : int\l- compoundShape : Region\l- mixingCutoutRegion : Region\l- isAddNotifyComplete : boolean\l backgroundEraseDisabled : boolean\l eventCache : EventQueueItem[]\l- coalescingEnabled : boolean\l- coalesceMap : Map\l- coalesceEventsParams : Class[]\l- requestFocusController : RequestFocusController\l- autoFocusTransferOnDisposal : boolean\l- componentSerializedDataVersion : int\l# accessibleContext : AccessibleContext\l $assertionsDisabled : boolean\l| getObjectLock() : Object\l getAccessControlContext() : AccessControlContext\l getBoundsOp() : int\l setBoundsOp(arg0:int) : void\l# init() : void\l initializeFocusTraversalKeys() : void\l constructComponentName() : String\l+ getName() : String\l+ setName(arg0:String) : void\l+ getParent() : Container\l getParent_NoClientCode() : Container\l getContainer() : Container\l+ getPeer() : ComponentPeer\l+ setDropTarget(arg0:DropTarget) : void\l+ getDropTarget() : DropTarget\l+ getGraphicsConfiguration() : GraphicsConfiguration\l getGraphicsConfiguration_NoClientCode() : GraphicsConfiguration\l setGraphicsConfiguration(arg0:GraphicsConfiguration) : void\l updateGraphicsData(arg0:GraphicsConfiguration) : boolean\l checkGD(arg0:String) : void\l+ getTreeLock() : Object\l checkTreeLock() : void\l+ getToolkit() : Toolkit\l getToolkitImpl() : Toolkit\l+ isValid() : boolean\l+ isDisplayable() : boolean\l+ isVisible() : boolean\l isVisible_NoClientCode() : boolean\l isRecursivelyVisible() : boolean\l- getRecursivelyVisibleBounds() : Rectangle\l pointRelativeToComponent(arg0:Point) : Point\l findUnderMouseInWindow(arg0:PointerInfo) : Component\l+ getMousePosition() : Point throws HeadlessException\l isSameOrAncestorOf(arg0:Component,arg1:boolean) : boolean\l+ isShowing() : boolean\l+ isEnabled() : boolean\l isEnabledImpl() : boolean\l+ setEnabled(arg0:boolean) : void\l+ enable() : void\l+ enable(arg0:boolean) : void\l+ disable() : void\l+ isDoubleBuffered() : boolean\l+ enableInputMethods(arg0:boolean) : void\l+ setVisible(arg0:boolean) : void\l+ show() : void\l+ show(arg0:boolean) : void\l containsFocus() : boolean\l clearMostRecentFocusOwnerOnHide() : void\l clearCurrentFocusCycleRootOnHide() : void\l+ hide() : void\l+ getForeground() : Color\l+ setForeground(arg0:Color) : void\l+ isForegroundSet() : boolean\l+ getBackground() : Color\l+ setBackground(arg0:Color) : void\l+ isBackgroundSet() : boolean\l+ getFont() : Font\l getFont_NoClientCode() : Font\l+ setFont(arg0:Font) : void\l+ isFontSet() : boolean\l+ getLocale() : Locale\l+ setLocale(arg0:Locale) : void\l+ getColorModel() : ColorModel\l+ getLocation() : Point\l+ getLocationOnScreen() : Point\l getLocationOnScreen_NoTreeLock() : Point\l+ location() : Point\l- location_NoClientCode() : Point\l+ setLocation(arg0:int,arg1:int) : void\l+ move(arg0:int,arg1:int) : void\l+ setLocation(arg0:Point) : void\l+ getSize() : Dimension\l+ size() : Dimension\l+ setSize(arg0:int,arg1:int) : void\l+ resize(arg0:int,arg1:int) : void\l+ setSize(arg0:Dimension) : void\l+ resize(arg0:Dimension) : void\l+ getBounds() : Rectangle\l+ bounds() : Rectangle\l+ setBounds(arg0:int,arg1:int,arg2:int,arg3:int) : void\l+ reshape(arg0:int,arg1:int,arg2:int,arg3:int) : void\l- repaintParentIfNeeded(arg0:int,arg1:int,arg2:int,arg3:int) : void\l- reshapeNativePeer(arg0:int,arg1:int,arg2:int,arg3:int,arg4:int) : void\l- notifyNewBounds(arg0:boolean,arg1:boolean) : void\l+ setBounds(arg0:Rectangle) : void\l+ getX() : int\l+ getY() : int\l+ getWidth() : int\l+ getHeight() : int\l+ getBounds(arg0:Rectangle) : Rectangle\l+ getSize(arg0:Dimension) : Dimension\l+ getLocation(arg0:Point) : Point\l+ isOpaque() : boolean\l+ isLightweight() : boolean\l+ setPreferredSize(arg0:Dimension) : void\l+ isPreferredSizeSet() : boolean\l+ getPreferredSize() : Dimension\l+ preferredSize() : Dimension\l+ setMinimumSize(arg0:Dimension) : void\l+ isMinimumSizeSet() : boolean\l+ getMinimumSize() : Dimension\l+ minimumSize() : Dimension\l+ setMaximumSize(arg0:Dimension) : void\l+ isMaximumSizeSet() : boolean\l+ getMaximumSize() : Dimension\l+ getAlignmentX() : float\l+ getAlignmentY() : float\l+ getBaseline(arg0:int,arg1:int) : int\l+ getBaselineResizeBehavior() : Component$BaselineResizeBehavior\l+ doLayout() : void\l+ layout() : void\l+ validate() : void\l+ invalidate() : void\l invalidateParent() : void\l invalidateIfValid() : void\l+ revalidate() : void\l revalidateSynchronously() : void\l+ getGraphics() : Graphics\l getGraphics_NoClientCode() : Graphics\l+ getFontMetrics(arg0:Font) : FontMetrics\l+ setCursor(arg0:Cursor) : void\l updateCursorImmediately() : void\l+ getCursor() : Cursor\l getCursor_NoClientCode() : Cursor\l+ isCursorSet() : boolean\l+ paint(arg0:Graphics) : void\l+ update(arg0:Graphics) : void\l+ paintAll(arg0:Graphics) : void\l lightweightPaint(arg0:Graphics) : void\l paintHeavyweightComponents(arg0:Graphics) : void\l+ repaint() : void\l+ repaint(arg0:long) : void\l+ repaint(arg0:int,arg1:int,arg2:int,arg3:int) : void\l+ repaint(arg0:long,arg1:int,arg2:int,arg3:int,arg4:int) : void\l+ print(arg0:Graphics) : void\l+ printAll(arg0:Graphics) : void\l lightweightPrint(arg0:Graphics) : void\l printHeavyweightComponents(arg0:Graphics) : void\l- getInsets_NoClientCode() : Insets\l+ imageUpdate(arg0:Image,arg1:int,arg2:int,arg3:int,arg4:int,arg5:int) : boolean\l+ createImage(arg0:ImageProducer) : Image\l+ createImage(arg0:int,arg1:int) : Image\l+ createVolatileImage(arg0:int,arg1:int) : VolatileImage\l+ createVolatileImage(arg0:int,arg1:int,arg2:ImageCapabilities) : VolatileImage throws AWTException\l+ prepareImage(arg0:Image,arg1:ImageObserver) : boolean\l+ prepareImage(arg0:Image,arg1:int,arg2:int,arg3:ImageObserver) : boolean\l+ checkImage(arg0:Image,arg1:ImageObserver) : int\l+ checkImage(arg0:Image,arg1:int,arg2:int,arg3:ImageObserver) : int\l createBufferStrategy(arg0:int) : void\l createBufferStrategy(arg0:int,arg1:BufferCapabilities) : void throws AWTException\l getBufferStrategy() : BufferStrategy\l getBackBuffer() : Image\l+ setIgnoreRepaint(arg0:boolean) : void\l+ getIgnoreRepaint() : boolean\l+ contains(arg0:int,arg1:int) : boolean\l+ inside(arg0:int,arg1:int) : boolean\l+ contains(arg0:Point) : boolean\l+ getComponentAt(arg0:int,arg1:int) : Component\l+ locate(arg0:int,arg1:int) : Component\l+ getComponentAt(arg0:Point) : Component\l+ deliverEvent(arg0:Event) : void\l+ dispatchEvent(arg0:AWTEvent) : void\l dispatchEventImpl(arg0:AWTEvent) : void\l autoProcessMouseWheel(arg0:MouseWheelEvent) : void\l dispatchMouseWheelToAncestor(arg0:MouseWheelEvent) : boolean\l checkWindowClosingException() : boolean\l areInputMethodsEnabled() : boolean\l eventEnabled(arg0:AWTEvent) : boolean\l eventTypeEnabled(arg0:int) : boolean\l+ postEvent(arg0:Event) : boolean\l+ addComponentListener(arg0:ComponentListener) : void\l+ removeComponentListener(arg0:ComponentListener) : void\l+ getComponentListeners() : ComponentListener[]\l+ addFocusListener(arg0:FocusListener) : void\l+ removeFocusListener(arg0:FocusListener) : void\l+ getFocusListeners() : FocusListener[]\l+ addHierarchyListener(arg0:HierarchyListener) : void\l+ removeHierarchyListener(arg0:HierarchyListener) : void\l+ getHierarchyListeners() : HierarchyListener[]\l+ addHierarchyBoundsListener(arg0:HierarchyBoundsListener) : void\l+ removeHierarchyBoundsListener(arg0:HierarchyBoundsListener) : void\l numListening(arg0:long) : int\l countHierarchyMembers() : int\l createHierarchyEvents(arg0:int,arg1:Component,arg2:Container,arg3:long,arg4:boolean) : int\l+ getHierarchyBoundsListeners() : HierarchyBoundsListener[]\l adjustListeningChildrenOnParent(arg0:long,arg1:int) : void\l+ addKeyListener(arg0:KeyListener) : void\l+ removeKeyListener(arg0:KeyListener) : void\l+ getKeyListeners() : KeyListener[]\l+ addMouseListener(arg0:MouseListener) : void\l+ removeMouseListener(arg0:MouseListener) : void\l+ getMouseListeners() : MouseListener[]\l+ addMouseMotionListener(arg0:MouseMotionListener) : void\l+ removeMouseMotionListener(arg0:MouseMotionListener) : void\l+ getMouseMotionListeners() : MouseMotionListener[]\l+ addMouseWheelListener(arg0:MouseWheelListener) : void\l+ removeMouseWheelListener(arg0:MouseWheelListener) : void\l+ getMouseWheelListeners() : MouseWheelListener[]\l+ addInputMethodListener(arg0:InputMethodListener) : void\l+ removeInputMethodListener(arg0:InputMethodListener) : void\l+ getInputMethodListeners() : InputMethodListener[]\l+ getListeners(arg0:Class) : EventListener[]\l+ getInputMethodRequests() : InputMethodRequests\l+ getInputContext() : InputContext\l# enableEvents(arg0:long) : void\l# disableEvents(arg0:long) : void\l- checkCoalescing() : boolean\l- isCoalesceEventsOverriden(arg0:Class) : boolean\l isCoalescingEnabled() : boolean\l# coalesceEvents(arg0:AWTEvent,arg1:AWTEvent) : AWTEvent\l# processEvent(arg0:AWTEvent) : void\l# processComponentEvent(arg0:ComponentEvent) : void\l# processFocusEvent(arg0:FocusEvent) : void\l# processKeyEvent(arg0:KeyEvent) : void\l# processMouseEvent(arg0:MouseEvent) : void\l# processMouseMotionEvent(arg0:MouseEvent) : void\l# processMouseWheelEvent(arg0:MouseWheelEvent) : void\l postsOldMouseEvents() : boolean\l# processInputMethodEvent(arg0:InputMethodEvent) : void\l# processHierarchyEvent(arg0:HierarchyEvent) : void\l# processHierarchyBoundsEvent(arg0:HierarchyEvent) : void\l+ handleEvent(arg0:Event) : boolean\l+ mouseDown(arg0:Event,arg1:int,arg2:int) : boolean\l+ mouseDrag(arg0:Event,arg1:int,arg2:int) : boolean\l+ mouseUp(arg0:Event,arg1:int,arg2:int) : boolean\l+ mouseMove(arg0:Event,arg1:int,arg2:int) : boolean\l+ mouseEnter(arg0:Event,arg1:int,arg2:int) : boolean\l+ mouseExit(arg0:Event,arg1:int,arg2:int) : boolean\l+ keyDown(arg0:Event,arg1:int) : boolean\l+ keyUp(arg0:Event,arg1:int) : boolean\l+ action(arg0:Event,arg1:Object) : boolean\l+ addNotify() : void\l+ removeNotify() : void\l+ gotFocus(arg0:Event,arg1:Object) : boolean\l+ lostFocus(arg0:Event,arg1:Object) : boolean\l+ isFocusTraversable() : boolean\l+ isFocusable() : boolean\l+ setFocusable(arg0:boolean) : void\l isFocusTraversableOverridden() : boolean\l+ setFocusTraversalKeys(arg0:int,arg1:Set) : void\l+ getFocusTraversalKeys(arg0:int) : Set\l setFocusTraversalKeys_NoIDCheck(arg0:int,arg1:Set) : void\l getFocusTraversalKeys_NoIDCheck(arg0:int) : Set\l+ areFocusTraversalKeysSet(arg0:int) : boolean\l+ setFocusTraversalKeysEnabled(arg0:boolean) : void\l+ getFocusTraversalKeysEnabled() : boolean\l+ requestFocus() : void\l requestFocus(arg0:CausedFocusEvent$Cause) : boolean\l# requestFocus(arg0:boolean) : boolean\l requestFocus(arg0:boolean,arg1:CausedFocusEvent$Cause) : boolean\l+ requestFocusInWindow() : boolean\l requestFocusInWindow(arg0:CausedFocusEvent$Cause) : boolean\l# requestFocusInWindow(arg0:boolean) : boolean\l requestFocusInWindow(arg0:boolean,arg1:CausedFocusEvent$Cause) : boolean\l requestFocusHelper(arg0:boolean,arg1:boolean) : boolean\l requestFocusHelper(arg0:boolean,arg1:boolean,arg2:CausedFocusEvent$Cause) : boolean\l- isRequestFocusAccepted(arg0:boolean,arg1:boolean,arg2:CausedFocusEvent$Cause) : boolean\l setRequestFocusController(arg0:RequestFocusController) : void\l+ getFocusCycleRootAncestor() : Container\l+ isFocusCycleRoot(arg0:Container) : boolean\l getTraversalRoot() : Container\l+ transferFocus() : void\l+ nextFocus() : void\l transferFocus(arg0:boolean) : boolean\l getNextFocusCandidate() : Component\l+ transferFocusBackward() : void\l transferFocusBackward(arg0:boolean) : boolean\l+ transferFocusUpCycle() : void\l+ hasFocus() : boolean\l+ isFocusOwner() : boolean\l setAutoFocusTransferOnDisposal(arg0:boolean) : void\l isAutoFocusTransferOnDisposal() : boolean\l+ add(arg0:PopupMenu) : void\l+ remove(arg0:MenuComponent) : void\l# paramString() : String\l+ toString() : String\l+ list() : void\l+ list(arg0:PrintStream) : void\l+ list(arg0:PrintStream,arg1:int) : void\l+ list(arg0:PrintWriter) : void\l+ list(arg0:PrintWriter,arg1:int) : void\l getNativeContainer() : Container\l+ addPropertyChangeListener(arg0:PropertyChangeListener) : void\l+ removePropertyChangeListener(arg0:PropertyChangeListener) : void\l+ getPropertyChangeListeners() : PropertyChangeListener[]\l+ addPropertyChangeListener(arg0:String,arg1:PropertyChangeListener) : void\l+ removePropertyChangeListener(arg0:String,arg1:PropertyChangeListener) : void\l+ getPropertyChangeListeners(arg0:String) : PropertyChangeListener[]\l# firePropertyChange(arg0:String,arg1:Object,arg2:Object) : void\l# firePropertyChange(arg0:String,arg1:boolean,arg2:boolean) : void\l# firePropertyChange(arg0:String,arg1:int,arg2:int) : void\l+ firePropertyChange(arg0:String,arg1:byte,arg2:byte) : void\l+ firePropertyChange(arg0:String,arg1:char,arg2:char) : void\l+ firePropertyChange(arg0:String,arg1:short,arg2:short) : void\l+ firePropertyChange(arg0:String,arg1:long,arg2:long) : void\l+ firePropertyChange(arg0:String,arg1:float,arg2:float) : void\l+ firePropertyChange(arg0:String,arg1:double,arg2:double) : void\l- doSwingSerialization() : void\l- writeObject(arg0:ObjectOutputStream) : void throws IOException\l- readObject(arg0:ObjectInputStream) : void throws ClassNotFoundException,IOException\l+ setComponentOrientation(arg0:ComponentOrientation) : void\l+ getComponentOrientation() : ComponentOrientation\l+ applyComponentOrientation(arg0:ComponentOrientation) : void\l canBeFocusOwner() : boolean\l canBeFocusOwnerRecursively() : boolean\l relocateComponent() : void\l getContainingWindow() : Window\l- initIDs() : void\l+ getAccessibleContext() : AccessibleContext\l getAccessibleIndexInParent() : int\l getAccessibleStateSet() : AccessibleStateSet\l isInstanceOf(arg0:Object,arg1:String) : boolean\l areBoundsValid() : boolean\l applyCompoundShape(arg0:Region) : void\l- getAppliedShape() : Region\l getLocationOnWindow() : Point\l getNormalShape() : Region\l getOpaqueShape() : Region\l getSiblingIndexAbove() : int\l getHWPeerAboveMe() : ComponentPeer\l getSiblingIndexBelow() : int\l isNonOpaqueForMixing() : boolean\l- calculateCurrentShape() : Region\l applyCurrentShape() : void\l subtractAndApplyShape(arg0:Region) : void\l- applyCurrentShapeBelowMe() : void\l subtractAndApplyShapeBelowMe() : void\l mixOnShowing() : void\l mixOnHiding(arg0:boolean) : void\l mixOnReshaping() : void\l mixOnZOrderChanging(arg0:int,arg1:int) : void\l mixOnValidating() : void\l isMixingNeeded() : boolean\l updateZOrder() : void\l access$002(arg0:Component,arg1:Region) : Region\l access$100(arg0:Component) : Point\l access$400(arg0:Component) : Insets\l access$500(arg0:Class) : boolean\l clinit() : void\l}"
];
ClassMethodVisitor [
shape="record",
label = "{ClassMethodVisitor|- c : IClass\l- m : IModel\l|+ init(arg0:int,arg1:IClass,arg2:IModel) : void\l+ init(arg0:int,arg1:ClassVisitor,arg2:IClass,arg3:IModel) : void\l+ visitMethod(arg0:int,arg1:String,arg2:String,arg3:String,arg4:String[]) : MethodVisitor\l addAccessLevel(arg0:int) : String\l addReturnType(arg0:String) : String\l addArguments(arg0:String) : List\l access$0(arg0:ClassMethodVisitor) : IModel\l}"
];
SDEditOutputStream [
shape="record",
style="filled"
fillcolor="green"
label = "{SDEditOutputStream\n\<\<decorator\>\>\n|- visitor : IVisitor\l- declaration : Map\l- existedClass : List\l- classes : StringBuffer\l- content : StringBuffer\l- count : int\l|+ init(arg0:OutputStream) : void throws IOException\l- write(arg0:String) : void\l- writeln(arg0:String) : void\l+ write(arg0:IMethod) : void\l- setupVisitMethod() : void\l+ toString() : String\l- addClassName(arg0:String,arg1:String) : void\l- addMessage(arg0:IMethod,arg1:IMethod) : void\l access$0(arg0:SDEditOutputStream,arg1:String,arg2:String) : void\l access$1(arg0:SDEditOutputStream,arg1:IMethod,arg2:IMethod) : void\l}"
];
OutputStream [
shape="record",
style="filled"
fillcolor="green"
label = "{OutputStream\n\<\<component\>\>\n|+ init() : void\l+ write(arg0:int) : void throws IOException\l+ write(arg0:byte[]) : void throws IOException\l+ write(arg0:byte[],arg1:int,arg2:int) : void throws IOException\l+ flush() : void throws IOException\l+ close() : void throws IOException\l}"
];
HelpFrame [
shape="record",
style="filled"
fillcolor="yellow"
label = "{HelpFrame\n\<\<Leaf\>\>\n|- serialVersionUID : long\l- FIXED_WIDTH : int\l- FIXED_HEIGHT : int\l- INITAL_SIZE : Dimension\l| clinit() : void\l+ init() : void\l}"
];
CompositeDetector [
shape="record",
label = "{CompositeDetector|+ init() : void\l+ toString() : String\l+ detect(arg0:IModel) : void throws Exception\l- updatePatternInformationWithSuper(arg0:IClass,arg1:Set,arg2:IModel) : void throws Exception\l- addComponents(arg0:String,arg1:String,arg2:IModel,arg3:Set) : void\l- checkComponent(arg0:String,arg1:IModel) : boolean throws Exception\l- getAllDescendents(arg0:IModel,arg1:String) : Set\l- addSubClasses(arg0:IModel,arg1:String,arg2:Set) : void\l- detectChildList(arg0:Set,arg1:IClass) : IField\l- checkFieldUsedInMethod(arg0:IField,arg1:IClass) : boolean\l- getAllInterfaces(arg0:Set,arg1:IModel) : Map\l- getSuperClasses(arg0:Set,arg1:IModel) : Set throws Exception\l- getInterfaces(arg0:IClass,arg1:Set) : Set\l- getClassByName(arg0:IModel,arg1:String) : IClass\l- getSuperClassNames(arg0:IClass,arg1:Set) : Set\l- getSuper(arg0:String,arg1:Set) : String\l}"
];
Utility [
shape="record",
label = "{Utility|+ APP_UML : String\l+ APP_UMLWP : String\l+ APP_SD : String\l+ APP_TYPE : String\l| clinit() : void\l+ init() : void\l+ simplifyClassName(arg0:String) : String\l+ simplifyType(arg0:String) : String\l+ isNotBuiltIn(arg0:String) : boolean\l+ removeRelationNotInPackage(arg0:IModel) : Set\l+ parseMethodSignature(arg0:String) : String[]\l}"
];
String [
shape="record",
style="filled"
fillcolor="red"
label = "{String\n\<\<adaptee\>\>\n|- value : char[]\l- hash : int\l- serialVersionUID : long\l- serialPersistentFields : ObjectStreamField[]\l+ CASE_INSENSITIVE_ORDER : Comparator\l|+ init() : void\l+ init(arg0:String) : void\l+ init(arg0:char[]) : void\l+ init(arg0:char[],arg1:int,arg2:int) : void\l+ init(arg0:int[],arg1:int,arg2:int) : void\l+ init(arg0:byte[],arg1:int,arg2:int,arg3:int) : void\l+ init(arg0:byte[],arg1:int) : void\l- checkBounds(arg0:byte[],arg1:int,arg2:int) : void\l+ init(arg0:byte[],arg1:int,arg2:int,arg3:String) : void throws UnsupportedEncodingException\l+ init(arg0:byte[],arg1:int,arg2:int,arg3:Charset) : void\l+ init(arg0:byte[],arg1:String) : void throws UnsupportedEncodingException\l+ init(arg0:byte[],arg1:Charset) : void\l+ init(arg0:byte[],arg1:int,arg2:int) : void\l+ init(arg0:byte[]) : void\l+ init(arg0:StringBuffer) : void\l+ init(arg0:StringBuilder) : void\l init(arg0:char[],arg1:boolean) : void\l+ length() : int\l+ isEmpty() : boolean\l+ charAt(arg0:int) : char\l+ codePointAt(arg0:int) : int\l+ codePointBefore(arg0:int) : int\l+ codePointCount(arg0:int,arg1:int) : int\l+ offsetByCodePoints(arg0:int,arg1:int) : int\l getChars(arg0:char[],arg1:int) : void\l+ getChars(arg0:int,arg1:int,arg2:char[],arg3:int) : void\l+ getBytes(arg0:int,arg1:int,arg2:byte[],arg3:int) : void\l+ getBytes(arg0:String) : byte[] throws UnsupportedEncodingException\l+ getBytes(arg0:Charset) : byte[]\l+ getBytes() : byte[]\l+ equals(arg0:Object) : boolean\l+ contentEquals(arg0:StringBuffer) : boolean\l- nonSyncContentEquals(arg0:AbstractStringBuilder) : boolean\l+ contentEquals(arg0:CharSequence) : boolean\l+ equalsIgnoreCase(arg0:String) : boolean\l+ compareTo(arg0:String) : int\l+ compareToIgnoreCase(arg0:String) : int\l+ regionMatches(arg0:int,arg1:String,arg2:int,arg3:int) : boolean\l+ regionMatches(arg0:boolean,arg1:int,arg2:String,arg3:int,arg4:int) : boolean\l+ startsWith(arg0:String,arg1:int) : boolean\l+ startsWith(arg0:String) : boolean\l+ endsWith(arg0:String) : boolean\l+ hashCode() : int\l+ indexOf(arg0:int) : int\l+ indexOf(arg0:int,arg1:int) : int\l- indexOfSupplementary(arg0:int,arg1:int) : int\l+ lastIndexOf(arg0:int) : int\l+ lastIndexOf(arg0:int,arg1:int) : int\l- lastIndexOfSupplementary(arg0:int,arg1:int) : int\l+ indexOf(arg0:String) : int\l+ indexOf(arg0:String,arg1:int) : int\l indexOf(arg0:char[],arg1:int,arg2:int,arg3:String,arg4:int) : int\l indexOf(arg0:char[],arg1:int,arg2:int,arg3:char[],arg4:int,arg5:int,arg6:int) : int\l+ lastIndexOf(arg0:String) : int\l+ lastIndexOf(arg0:String,arg1:int) : int\l lastIndexOf(arg0:char[],arg1:int,arg2:int,arg3:String,arg4:int) : int\l lastIndexOf(arg0:char[],arg1:int,arg2:int,arg3:char[],arg4:int,arg5:int,arg6:int) : int\l+ substring(arg0:int) : String\l+ substring(arg0:int,arg1:int) : String\l+ subSequence(arg0:int,arg1:int) : CharSequence\l+ concat(arg0:String) : String\l+ replace(arg0:char,arg1:char) : String\l+ matches(arg0:String) : boolean\l+ contains(arg0:CharSequence) : boolean\l+ replaceFirst(arg0:String,arg1:String) : String\l+ replaceAll(arg0:String,arg1:String) : String\l+ replace(arg0:CharSequence,arg1:CharSequence) : String\l+ split(arg0:String,arg1:int) : String[]\l+ split(arg0:String) : String[]\l+ join(arg0:CharSequence,arg1:CharSequence[]) : String\l+ join(arg0:CharSequence,arg1:Iterable) : String\l+ toLowerCase(arg0:Locale) : String\l+ toLowerCase() : String\l+ toUpperCase(arg0:Locale) : String\l+ toUpperCase() : String\l+ trim() : String\l+ toString() : String\l+ toCharArray() : char[]\l+ format(arg0:String,arg1:Object[]) : String\l+ format(arg0:Locale,arg1:String,arg2:Object[]) : String\l+ valueOf(arg0:Object) : String\l+ valueOf(arg0:char[]) : String\l+ valueOf(arg0:char[],arg1:int,arg2:int) : String\l+ copyValueOf(arg0:char[],arg1:int,arg2:int) : String\l+ copyValueOf(arg0:char[]) : String\l+ valueOf(arg0:boolean) : String\l+ valueOf(arg0:char) : String\l+ valueOf(arg0:int) : String\l+ valueOf(arg0:long) : String\l+ valueOf(arg0:float) : String\l+ valueOf(arg0:double) : String\l+ intern() : String\l+ compareTo(arg0:Object) : int\l clinit() : void\l}"
];
Runnable [
shape="record",
label = "{\<\<interface\>\>\nRunnable|+ run() : void\l}"
];
Visitor [
shape="record",
label = "{Visitor| keyToVisitMethodMap : Map\l|+ init() : void\l+ preVisit(arg0:ITraverser) : void\l+ visit(arg0:ITraverser) : void\l+ postVisit(arg0:ITraverser) : void\l- doVisit(arg0:VisitType,arg1:ITraverser) : void\l+ addVisit(arg0:VisitType,arg1:Class,arg2:IVisitMethod) : void\l+ removeVisit(arg0:VisitType,arg1:Class) : void\l}"
];
IDeclaration [
shape="record",
label = "{\<\<interface\>\>\nIDeclaration|+ getType() : String\l+ getName() : String\l+ getTags() : Set\l+ addTag(arg0:String) : void\l}"
];
Enum [
shape="record",
label = "{Enum|- name : String\l- ordinal : int\l|+ name() : String\l+ ordinal() : int\l# init(arg0:String,arg1:int) : void\l+ toString() : String\l+ equals(arg0:Object) : boolean\l+ hashCode() : int\l# clone() : Object throws CloneNotSupportedException\l+ compareTo(arg0:Enum) : int\l+ getDeclaringClass() : Class\l+ valueOf(arg0:Class,arg1:String) : Enum\l# finalize() : void\l- readObject(arg0:ObjectInputStream) : void throws IOException,ClassNotFoundException\l- readObjectNoData() : void throws ObjectStreamException\l+ compareTo(arg0:Object) : int\l}"
];
Clazz [
shape="record",
label = "{Clazz|- isVisible : boolean\l- methods : List\l- fields : List\l- declaration : IDeclaration\l|+ init() : void\l+ accept(arg0:IVisitor) : void\l+ addMethod(arg0:IMethod) : void\l+ addField(arg0:IField) : void\l+ addDeclaration(arg0:IDeclaration) : void\l+ getDeclaration() : IDeclaration\l+ getMethods() : List\l+ getFields() : List\l+ toString() : String\l+ getName() : String\l+ getTags() : Set\l+ addTag(arg0:String) : void\l+ isVisible() : boolean\l+ setVisible(arg0:boolean) : void\l}"
];
IMethod [
shape="record",
style="filled"
fillcolor="red"
style="filled"
fillcolor="yellow"
label = "{\<\<interface\>\>\nIMethod\n\<\<Component\>\>\n\n\<\<target\>\>\n|+ getName() : String\l+ getReturnType() : String\l+ getAccess() : String\l+ getParamTypes() : List\l+ getExceptions() : List\l+ getClassName() : String\l+ getCalls() : List\l+ setParent(arg0:IMethod) : void\l+ addCall(arg0:IMethod) : void\l+ getParent() : IMethod\l+ setClassName(arg0:String) : void\l+ setReturnType(arg0:String) : void\l+ compareMethod(arg0:IMethod) : boolean\l+ printCallChains(arg0:int) : String\l+ isStatic() : boolean\l+ setStatic(arg0:boolean) : void\l}"
];
Runtime [
shape="record",
color="blue"
label = "{Runtime\n\<\<Singleton\>\>\n|- currentRuntime : Runtime\l|+ getRuntime() : Runtime\l- init() : void\l+ exit(arg0:int) : void\l+ addShutdownHook(arg0:Thread) : void\l+ removeShutdownHook(arg0:Thread) : boolean\l+ halt(arg0:int) : void\l+ runFinalizersOnExit(arg0:boolean) : void\l+ exec(arg0:String) : Process throws IOException\l+ exec(arg0:String,arg1:String[]) : Process throws IOException\l+ exec(arg0:String,arg1:String[],arg2:File) : Process throws IOException\l+ exec(arg0:String[]) : Process throws IOException\l+ exec(arg0:String[],arg1:String[]) : Process throws IOException\l+ exec(arg0:String[],arg1:String[],arg2:File) : Process throws IOException\l+ availableProcessors() : int\l+ freeMemory() : long\l+ totalMemory() : long\l+ maxMemory() : long\l+ gc() : void\l- runFinalization0() : void\l+ runFinalization() : void\l+ traceInstructions(arg0:boolean) : void\l+ traceMethodCalls(arg0:boolean) : void\l+ load(arg0:String) : void\l load0(arg0:Class,arg1:String) : void\l+ loadLibrary(arg0:String) : void\l loadLibrary0(arg0:Class,arg1:String) : void\l+ getLocalizedInputStream(arg0:InputStream) : InputStream\l+ getLocalizedOutputStream(arg0:OutputStream) : OutputStream\l clinit() : void\l}"
];
ImageObserver [
shape="record",
label = "{\<\<interface\>\>\nImageObserver|+ WIDTH : int\l+ HEIGHT : int\l+ PROPERTIES : int\l+ SOMEBITS : int\l+ FRAMEBITS : int\l+ ALLBITS : int\l+ ERROR : int\l+ ABORT : int\l|+ imageUpdate(arg0:Image,arg1:int,arg2:int,arg3:int,arg4:int,arg5:int) : boolean\l}"
];
IModel [
shape="record",
label = "{\<\<interface\>\>\nIModel|+ getClasses() : Set\l+ getRelations() : Set\l+ addClass(arg0:IClass) : void\l+ addRelation(arg0:IRelation) : void\l+ contains(arg0:IRelation) : boolean\l+ addPattern(arg0:IPattern) : void\l+ getPatterns() : Set\l+ setRelation(arg0:Set) : void\l}"
];
SingletonDetector [
shape="record",
label = "{SingletonDetector|- visitor : IVisitor\l- className : String\l- staticField : boolean\l privateConstructor : boolean\l staticMethod : boolean\l requireGetInstance : int\l|+ init(arg0:int) : void\l+ toString() : String\l+ detect(arg0:IModel) : void\l- setupVisitMethod() : void\l- setupVisitField() : void\l access$0(arg0:SingletonDetector) : String\l access$1(arg0:SingletonDetector,arg1:boolean) : void\l}"
];
Container [
shape="record",
style="filled"
fillcolor="yellow"
label = "{Container\n\<\<Composite\>\>\n|- log : PlatformLogger\l- eventLog : PlatformLogger\l- EMPTY_ARRAY : Component[]\l- component : List\l layoutMgr : LayoutManager\l- dispatcher : LightweightDispatcher\l- focusTraversalPolicy : FocusTraversalPolicy\l- focusCycleRoot : boolean\l- focusTraversalPolicyProvider : boolean\l- printingThreads : Set\l- printing : boolean\l containerListener : ContainerListener\l listeningChildren : int\l listeningBoundsChildren : int\l descendantsCount : int\l preserveBackgroundColor : Color\l- serialVersionUID : long\l INCLUDE_SELF : boolean\l SEARCH_HEAVYWEIGHTS : boolean\l- numOfHWComponents : int\l- numOfLWComponents : int\l- mixingLog : PlatformLogger\l- serialPersistentFields : ObjectStreamField[]\l- isJavaAwtSmartInvalidate : boolean\l- descendUnconditionallyWhenValidating : boolean\l modalComp : Component\l modalAppContext : AppContext\l- containerSerializedDataVersion : int\l|- initIDs() : void\l+ init() : void\l initializeFocusTraversalKeys() : void\l+ getComponentCount() : int\l+ countComponents() : int\l+ getComponent(arg0:int) : Component\l+ getComponents() : Component[]\l getComponents_NoClientCode() : Component[]\l getComponentsSync() : Component[]\l+ getInsets() : Insets\l+ insets() : Insets\l+ add(arg0:Component) : Component\l+ add(arg0:String,arg1:Component) : Component\l+ add(arg0:Component,arg1:int) : Component\l- checkAddToSelf(arg0:Component) : void\l- checkNotAWindow(arg0:Component) : void\l- checkAdding(arg0:Component,arg1:int) : void\l- removeDelicately(arg0:Component,arg1:Container,arg2:int) : boolean\l canContainFocusOwner(arg0:Component) : boolean\l hasHeavyweightDescendants() : boolean\l hasLightweightDescendants() : boolean\l getHeavyweightContainer() : Container\l- isRemoveNotifyNeeded(arg0:Component,arg1:Container,arg2:Container) : boolean\l+ setComponentZOrder(arg0:Component,arg1:int) : void\l- reparentTraverse(arg0:ContainerPeer,arg1:Container) : void\l- reparentChild(arg0:Component) : void\l- addDelicately(arg0:Component,arg1:Container,arg2:int) : void\l+ getComponentZOrder(arg0:Component) : int\l+ add(arg0:Component,arg1:Object) : void\l+ add(arg0:Component,arg1:Object,arg2:int) : void\l# addImpl(arg0:Component,arg1:Object,arg2:int) : void\l updateGraphicsData(arg0:GraphicsConfiguration) : boolean\l checkGD(arg0:String) : void\l+ remove(arg0:int) : void\l+ remove(arg0:Component) : void\l+ removeAll() : void\l numListening(arg0:long) : int\l adjustListeningChildren(arg0:long,arg1:int) : void\l adjustDescendants(arg0:int) : void\l adjustDecendantsOnParent(arg0:int) : void\l countHierarchyMembers() : int\l- getListenersCount(arg0:int,arg1:boolean) : int\l createHierarchyEvents(arg0:int,arg1:Component,arg2:Container,arg3:long,arg4:boolean) : int\l createChildHierarchyEvents(arg0:int,arg1:long,arg2:boolean) : void\l+ getLayout() : LayoutManager\l+ setLayout(arg0:LayoutManager) : void\l+ doLayout() : void\l+ layout() : void\l+ isValidateRoot() : boolean\l invalidateParent() : void\l+ invalidate() : void\l+ validate() : void\l validateUnconditionally() : void\l# validateTree() : void\l invalidateTree() : void\l+ setFont(arg0:Font) : void\l+ getPreferredSize() : Dimension\l+ preferredSize() : Dimension\l+ getMinimumSize() : Dimension\l+ minimumSize() : Dimension\l+ getMaximumSize() : Dimension\l+ getAlignmentX() : float\l+ getAlignmentY() : float\l+ paint(arg0:Graphics) : void\l+ update(arg0:Graphics) : void\l+ print(arg0:Graphics) : void\l+ paintComponents(arg0:Graphics) : void\l lightweightPaint(arg0:Graphics) : void\l paintHeavyweightComponents(arg0:Graphics) : void\l+ printComponents(arg0:Graphics) : void\l lightweightPrint(arg0:Graphics) : void\l printHeavyweightComponents(arg0:Graphics) : void\l+ addContainerListener(arg0:ContainerListener) : void\l+ removeContainerListener(arg0:ContainerListener) : void\l+ getContainerListeners() : ContainerListener[]\l+ getListeners(arg0:Class) : EventListener[]\l eventEnabled(arg0:AWTEvent) : boolean\l# processEvent(arg0:AWTEvent) : void\l# processContainerEvent(arg0:ContainerEvent) : void\l dispatchEventImpl(arg0:AWTEvent) : void\l dispatchEventToSelf(arg0:AWTEvent) : void\l getMouseEventTarget(arg0:int,arg1:int,arg2:boolean) : Component\l getDropTargetEventTarget(arg0:int,arg1:int,arg2:boolean) : Component\l- getMouseEventTarget(arg0:int,arg1:int,arg2:boolean,arg3:Container$EventTargetFilter,arg4:boolean) : Component\l- getMouseEventTargetImpl(arg0:int,arg1:int,arg2:boolean,arg3:Container$EventTargetFilter,arg4:boolean,arg5:boolean) : Component\l proxyEnableEvents(arg0:long) : void\l+ deliverEvent(arg0:Event) : void\l+ getComponentAt(arg0:int,arg1:int) : Component\l+ locate(arg0:int,arg1:int) : Component\l+ getComponentAt(arg0:Point) : Component\l+ getMousePosition(arg0:boolean) : Point throws HeadlessException\l isSameOrAncestorOf(arg0:Component,arg1:boolean) : boolean\l+ findComponentAt(arg0:int,arg1:int) : Component\l findComponentAt(arg0:int,arg1:int,arg2:boolean) : Component\l findComponentAtImpl(arg0:int,arg1:int,arg2:boolean) : Component\l- getChildAt(arg0:Component,arg1:int,arg2:int,arg3:boolean) : Component\l+ findComponentAt(arg0:Point) : Component\l+ addNotify() : void\l+ removeNotify() : void\l+ isAncestorOf(arg0:Component) : boolean\l- startLWModal() : void\l- stopLWModal() : void\l# paramString() : String\l+ list(arg0:PrintStream,arg1:int) : void\l+ list(arg0:PrintWriter,arg1:int) : void\l+ setFocusTraversalKeys(arg0:int,arg1:Set) : void\l+ getFocusTraversalKeys(arg0:int) : Set\l+ areFocusTraversalKeysSet(arg0:int) : boolean\l+ isFocusCycleRoot(arg0:Container) : boolean\l- findTraversalRoot() : Container\l containsFocus() : boolean\l- isParentOf(arg0:Component) : boolean\l clearMostRecentFocusOwnerOnHide() : void\l clearCurrentFocusCycleRootOnHide() : void\l getTraversalRoot() : Container\l+ setFocusTraversalPolicy(arg0:FocusTraversalPolicy) : void\l+ getFocusTraversalPolicy() : FocusTraversalPolicy\l+ isFocusTraversalPolicySet() : boolean\l+ setFocusCycleRoot(arg0:boolean) : void\l+ isFocusCycleRoot() : boolean\l+ setFocusTraversalPolicyProvider(arg0:boolean) : void\l+ isFocusTraversalPolicyProvider() : boolean\l+ transferFocusDownCycle() : void\l preProcessKeyEvent(arg0:KeyEvent) : void\l postProcessKeyEvent(arg0:KeyEvent) : void\l postsOldMouseEvents() : boolean\l+ applyComponentOrientation(arg0:ComponentOrientation) : void\l+ addPropertyChangeListener(arg0:PropertyChangeListener) : void\l+ addPropertyChangeListener(arg0:String,arg1:PropertyChangeListener) : void\l- writeObject(arg0:ObjectOutputStream) : void throws IOException\l- readObject(arg0:ObjectInputStream) : void throws ClassNotFoundException,IOException\l getAccessibleAt(arg0:Point) : Accessible\l getAccessibleChildrenCount() : int\l getAccessibleChild(arg0:int) : Accessible\l increaseComponentCount(arg0:Component) : void\l decreaseComponentCount(arg0:Component) : void\l- getTopmostComponentIndex() : int\l- getBottommostComponentIndex() : int\l getOpaqueShape() : Region\l recursiveSubtractAndApplyShape(arg0:Region) : void\l recursiveSubtractAndApplyShape(arg0:Region,arg1:int) : void\l recursiveSubtractAndApplyShape(arg0:Region,arg1:int,arg2:int) : void\l recursiveApplyCurrentShape() : void\l recursiveApplyCurrentShape(arg0:int) : void\l recursiveApplyCurrentShape(arg0:int,arg1:int) : void\l- recursiveShowHeavyweightChildren() : void\l- recursiveHideHeavyweightChildren() : void\l- recursiveRelocateHeavyweightChildren(arg0:Point) : void\l isRecursivelyVisibleUpToHeavyweightContainer() : boolean\l mixOnShowing() : void\l mixOnHiding(arg0:boolean) : void\l mixOnReshaping() : void\l mixOnZOrderChanging(arg0:int,arg1:int) : void\l mixOnValidating() : void\l clinit() : void\l}"
];
TMXXreader [
shape="record",
label = "{TMXXreader|- INPUT_FOLDER : String\l- INPUT_CLASSES : String\l- OUTPUT_DIR : String\l- DOT_PATH : String\l- PHASES : String\l- APP_TYPE : String\l- inputFolder : String\l- inputClasses : List\l- outputDir : String\l- dotPath : String\l- phases : List\l- attributeMap : Map\l- appType : String\l- reader : BufferedReader\l|+ init(arg0:String) : void throws FileNotFoundException\l+ readFile() : void throws IOException\l- getContent(arg0:String) : String\l- splitAndAddPhases(arg0:String) : void\l- splitAndAddClasses(arg0:String) : void\l+ toString() : String\l+ getInputFolder() : String\l+ getOutputDir() : String\l+ getAppType() : String\l+ getAttrMap() : Map\l+ getPhases() : List\l+ getInputClasses() : List\l+ getDotPath() : String\l}"
];
ClassFinder [
shape="record",
label = "{ClassFinder|- DOT : char\l- SLASH : char\l- CLASS_SUFFIX : String\l- BAD_PACKAGE_ERROR : String\l|+ init() : void\l+ find(arg0:String) : List\l- find(arg0:File,arg1:String) : List\l}"
];
MethodVisitor [
shape="record",
label = "{MethodVisitor|# api : int\l# mv : MethodVisitor\l|+ init(arg0:int) : void\l+ init(arg0:int,arg1:MethodVisitor) : void\l+ visitParameter(arg0:String,arg1:int) : void\l+ visitAnnotationDefault() : AnnotationVisitor\l+ visitAnnotation(arg0:String,arg1:boolean) : AnnotationVisitor\l+ visitTypeAnnotation(arg0:int,arg1:TypePath,arg2:String,arg3:boolean) : AnnotationVisitor\l+ visitParameterAnnotation(arg0:int,arg1:String,arg2:boolean) : AnnotationVisitor\l+ visitAttribute(arg0:Attribute) : void\l+ visitCode() : void\l+ visitFrame(arg0:int,arg1:int,arg2:Object[],arg3:int,arg4:Object[]) : void\l+ visitInsn(arg0:int) : void\l+ visitIntInsn(arg0:int,arg1:int) : void\l+ visitVarInsn(arg0:int,arg1:int) : void\l+ visitTypeInsn(arg0:int,arg1:String) : void\l+ visitFieldInsn(arg0:int,arg1:String,arg2:String,arg3:String) : void\l+ visitMethodInsn(arg0:int,arg1:String,arg2:String,arg3:String) : void\l+ visitMethodInsn(arg0:int,arg1:String,arg2:String,arg3:String,arg4:boolean) : void\l+ visitInvokeDynamicInsn(arg0:String,arg1:String,arg2:Handle,arg3:Object[]) : void\l+ visitJumpInsn(arg0:int,arg1:Label) : void\l+ visitLabel(arg0:Label) : void\l+ visitLdcInsn(arg0:Object) : void\l+ visitIincInsn(arg0:int,arg1:int) : void\l+ visitTableSwitchInsn(arg0:int,arg1:int,arg2:Label,arg3:Label[]) : void\l+ visitLookupSwitchInsn(arg0:Label,arg1:int[],arg2:Label[]) : void\l+ visitMultiANewArrayInsn(arg0:String,arg1:int) : void\l+ visitInsnAnnotation(arg0:int,arg1:TypePath,arg2:String,arg3:boolean) : AnnotationVisitor\l+ visitTryCatchBlock(arg0:Label,arg1:Label,arg2:Label,arg3:String) : void\l+ visitTryCatchAnnotation(arg0:int,arg1:TypePath,arg2:String,arg3:boolean) : AnnotationVisitor\l+ visitLocalVariable(arg0:String,arg1:String,arg2:String,arg3:Label,arg4:Label,arg5:int) : void\l+ visitLocalVariableAnnotation(arg0:int,arg1:TypePath,arg2:Label[],arg3:Label[],arg4:int[],arg5:String,arg6:boolean) : AnnotationVisitor\l+ visitLineNumber(arg0:int,arg1:Label) : void\l+ visitMaxs(arg0:int,arg1:int) : void\l+ visitEnd() : void\l}"
];
FilterOutputStream [
shape="record",
style="filled"
fillcolor="green"
label = "{FilterOutputStream\n\<\<decorator\>\>\n|# out : OutputStream\l|+ init(arg0:OutputStream) : void\l+ write(arg0:int) : void throws IOException\l+ write(arg0:byte[]) : void throws IOException\l+ write(arg0:byte[],arg1:int,arg2:int) : void throws IOException\l+ flush() : void throws IOException\l+ close() : void throws IOException\l}"
];
IModel -> IRelation [arrowhead="vee",style="dashed"]
SDEditOutputStream -> IMethod [arrowhead="vee",style="dashed"]
Framework -> TMXXreader [arrowhead="vee"]
Runtime -> IllegalArgumentException [arrowhead="vee",style="dashed"]
ModelVisitor -> IField [arrowhead="vee",style="dashed"]
Visitor -> ITraverser [arrowhead="vee",style="dashed"]
Runtime -> InputStream [arrowhead="vee",style="dashed"]
ResultFrame -> ResultFrame [arrowhead="vee",style="dashed"]
IPattern -> ITraverser [arrowhead="onormal",style="dashed"]
ClassMethodVisitor -> IClass [arrowhead="vee"]
BufferedReader -> BufferedReader [arrowhead="vee",style="dashed"]
String -> long [arrowhead="vee"]
AdapterDetector -> ClassFieldVisitor [arrowhead="vee",style="dashed"]
String -> IllegalArgumentException [arrowhead="vee",style="dashed"]
String -> ArrayList [arrowhead="vee",style="dashed"]
LandingPage -> ResultFrame [arrowhead="vee",style="dashed"]
CompositeDetector -> IClass [arrowhead="vee",style="dashed"]
Runtime -> Object [arrowhead="onormal"]
LandingPage -> Framework [arrowhead="vee"]
String -> Serializable [arrowhead="onormal",style="dashed"]
Clazz -> IDeclaration [arrowhead="vee"]
DecoratorDetector -> IField [arrowhead="vee",style="dashed"]
FilterOutputStream -> OutputStream [arrowhead="vee",label="decorates"]
Method -> IVisitor [arrowhead="vee",style="dashed"]
IOutputStream -> IModel [arrowhead="vee",style="dashed"]
Frame -> Window [arrowhead="onormal"]
RootPaneContainer -> Container [arrowhead="vee",style="dashed"]
Runtime -> RuntimePermission [arrowhead="vee",style="dashed"]
String -> int[] [arrowhead="vee",style="dashed"]
Closeable -> AutoCloseable [arrowhead="onormal",style="dashed"]
ClassFieldVisitor -> IClass [arrowhead="vee"]
Runtime -> boolean [arrowhead="vee",style="dashed"]
ModelVisitor -> IClass [arrowhead="vee",style="dashed"]
VisitType -> VisitType [arrowhead="vee"]
String -> Object [arrowhead="onormal"]
Field -> IField [arrowhead="onormal",style="dashed"]
Window -> Accessible [arrowhead="onormal",style="dashed"]
NewBeeFramework -> ClassMethodVisitor [arrowhead="vee",style="dashed"]
ActionListener -> EventListener [arrowhead="onormal",style="dashed"]
AdapterDetector -> ClassMethodVisitor [arrowhead="vee",style="dashed"]
IDeclaration -> ITraverser [arrowhead="onormal",style="dashed"]
ClassDeclarationVisitor -> IModel [arrowhead="vee"]
SDEditOutputStream -> IVisitor [arrowhead="vee"]
String -> ObjectStreamField[] [arrowhead="vee"]
ClassMethodVisitor -> ClassMethodVisitor [arrowhead="vee",style="dashed"]
IModel -> ITraverser [arrowhead="onormal",style="dashed"]
Runtime -> String [arrowhead="vee",style="dashed"]
SingletonDetector -> IDetector [arrowhead="onormal",style="dashed"]
NewBeeFramework -> IDetector [arrowhead="vee"]
ClassVisitor -> MethodVisitor [arrowhead="vee",style="dashed"]
JComponent -> Component [arrowhead="vee"]
ResultFrame -> IPattern [arrowhead="vee"]
OutputStream -> Closeable [arrowhead="onormal",style="dashed"]
Runtime -> Class [arrowhead="vee",style="dashed"]
AboutFrame -> JFrame [arrowhead="onormal"]
App -> SDEditOutputStream [arrowhead="vee",style="dashed"]
NewBeeFramework -> IMethod [arrowhead="vee"]
Visitor -> IVisitMethod [arrowhead="vee"]
DecoratorDetector -> IClass [arrowhead="vee",style="dashed"]
Relation -> IRelation [arrowhead="onormal",style="dashed"]
ClassMethodVisitor -> Method [arrowhead="vee",style="dashed"]
JComponent -> Container [arrowhead="onormal"]
IVisitor -> IVisitMethod [arrowhead="vee",style="dashed"]
Runtime -> String[] [arrowhead="vee",style="dashed"]
String -> String [arrowhead="vee"]
String -> CharSequence[] [arrowhead="vee",style="dashed"]
IField -> ITraverser [arrowhead="onormal",style="dashed"]
Runtime -> long [arrowhead="vee",style="dashed"]
NewBeeFramework -> SequenceMethodVisitor [arrowhead="vee",style="dashed"]
AdapterDetector -> ClassDeclarationVisitor [arrowhead="vee",style="dashed"]
String -> Charset [arrowhead="vee",style="dashed"]
IRelation -> ITraverser [arrowhead="onormal",style="dashed"]
VisitType -> Enum [arrowhead="onormal"]
Container -> Container [arrowhead="vee",style="dashed"]
Framework -> ClassMethodVisitor [arrowhead="vee",style="dashed"]
BufferedReader -> Reader [arrowhead="onormal"]
Declaration -> IDeclaration [arrowhead="onormal",style="dashed"]
Component -> Component [arrowhead="vee",style="dashed"]
ClassFieldVisitor -> ClassVisitor [arrowhead="vee",style="dashed"]
GraphVizOutputStream -> GraphVizOutputStream [arrowhead="vee",style="dashed"]
ModelVisitor -> IMethod [arrowhead="vee",style="dashed"]
JFrame -> Accessible [arrowhead="onormal",style="dashed"]
IPattern -> IClass [arrowhead="vee",style="dashed"]
OutputStream -> Flushable [arrowhead="onormal",style="dashed"]
ClassMethodVisitor -> MethodVisitor [arrowhead="vee",style="dashed"]
Framework -> CompositeDetector [arrowhead="vee",style="dashed"]
Runtime -> Thread [arrowhead="vee",style="dashed"]
BufferedReader -> String [arrowhead="vee",style="dashed"]
String -> CharSequence [arrowhead="onormal",style="dashed"]
AdapterDetector -> IDetector [arrowhead="onormal",style="dashed"]
String -> Locale [arrowhead="vee",style="dashed"]
String -> byte[] [arrowhead="vee",style="dashed"]
IClass -> IField [arrowhead="vee",style="dashed"]
Frame -> MenuContainer [arrowhead="onormal",style="dashed"]
String -> Comparable [arrowhead="onormal",style="dashed"]
ResultFrame -> JFrame [arrowhead="onormal"]
Frame -> Frame [arrowhead="vee",style="dashed"]
DecoratorDetector -> IModel [arrowhead="vee",style="dashed"]
ClassVisitor -> ClassVisitor [arrowhead="vee"]
Framework -> IModel [arrowhead="vee"]
Framework -> ClassFieldVisitor [arrowhead="vee",style="dashed"]
IVisitor -> VisitType [arrowhead="vee",style="dashed"]
Container -> Accessible [arrowhead="vee",style="dashed"]
UMLImageComponent -> Icon [arrowhead="vee"]
Component -> Serializable [arrowhead="onormal",style="dashed"]
String -> boolean [arrowhead="vee",style="dashed"]
IOutputStream -> FilterOutputStream [arrowhead="onormal"]
GraphVizOutputStream -> IVisitor [arrowhead="vee"]
Reader -> Object [arrowhead="vee"]
Runtime -> StringTokenizer [arrowhead="vee",style="dashed"]
Model -> Model [arrowhead="vee",style="dashed"]
String -> Iterable [arrowhead="vee",style="dashed"]
Clazz -> IClass [arrowhead="onormal",style="dashed"]
SequenceMethodVisitor -> MethodVisitor [arrowhead="vee",style="dashed"]
SingletonDetector -> IVisitor [arrowhead="vee"]
Runtime -> OutputStream [arrowhead="vee",style="dashed"]
ResultFrame -> TMXXreader [arrowhead="vee"]
BufferedReader -> Reader [arrowhead="vee",label="decorates"]
Component -> Container [arrowhead="vee"]
String -> IndexOutOfBoundsException [arrowhead="vee",style="dashed"]
Method -> String [arrowhead="vee",label="adapts"]
ResultFrame -> IModel [arrowhead="vee"]
NewBeeFramework -> IOutputStream [arrowhead="vee"]
IModel -> IClass [arrowhead="vee",style="dashed"]
LandingPage -> LandingPage [arrowhead="vee",style="dashed"]
String -> CharSequence [arrowhead="vee",style="dashed"]
String -> NullPointerException [arrowhead="vee",style="dashed"]
SequenceMethodVisitor -> Method [arrowhead="vee",style="dashed"]
Reader -> Closeable [arrowhead="onormal",style="dashed"]
AbstractModelVisitor -> IMethod [arrowhead="vee",style="dashed"]
IOutputStream -> IMethod [arrowhead="vee",style="dashed"]
Framework -> AdapterDetector [arrowhead="vee",style="dashed"]
Reader -> Readable [arrowhead="onormal",style="dashed"]
String -> AbstractStringBuilder [arrowhead="vee",style="dashed"]
ClassFieldVisitor -> IModel [arrowhead="vee"]
App -> NewBeeFramework [arrowhead="vee",style="dashed"]
Window -> Window [arrowhead="vee",style="dashed"]
ClassMethodVisitor -> ClassVisitor [arrowhead="vee",style="dashed"]
ClassMethodVisitor -> IModel [arrowhead="vee"]
Clazz -> IField [arrowhead="vee"]
SDEditOutputStream -> OutputStream [arrowhead="vee",style="dashed"]
DecoratorDetector -> Pattern [arrowhead="vee",style="dashed"]
String -> double [arrowhead="vee",style="dashed"]
NewBeeFramework -> ClassDeclarationVisitor [arrowhead="vee",style="dashed"]
NewBeeFramework -> Method [arrowhead="vee",style="dashed"]
Runtime -> Runtime [arrowhead="vee"]
ClassDeclarationVisitor -> Relation [arrowhead="vee",style="dashed"]
IMethod -> IMethod [arrowhead="vee",style="dashed"]
String -> StringIndexOutOfBoundsException [arrowhead="vee",style="dashed"]
Utility -> IModel [arrowhead="vee",style="dashed"]
Window -> Frame [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> ClassVisitor [arrowhead="onormal"]
ITraverser -> IVisitor [arrowhead="vee",style="dashed"]
NewBeeFramework -> Model [arrowhead="vee",style="dashed"]
IOutputStream -> OutputStream [arrowhead="vee",style="dashed"]
String -> int [arrowhead="vee"]
ClassFieldVisitor -> Relation [arrowhead="vee",style="dashed"]
CompositeDetector -> IDetector [arrowhead="onormal",style="dashed"]
NewBeeFramework -> Clazz [arrowhead="vee",style="dashed"]
Framework -> Notifier [arrowhead="onormal",style="dashed"]
NewBeeFramework -> IModel [arrowhead="vee"]
ClassMethodVisitor -> Relation [arrowhead="vee",style="dashed"]
ResultFrame -> GraphVizOutputStream [arrowhead="vee",style="dashed"]
Enum -> Comparable [arrowhead="onormal",style="dashed"]
Reader -> boolean [arrowhead="vee",style="dashed"]
Pattern -> IClass [arrowhead="vee"]
ModelVisitor -> AbstractModelVisitor [arrowhead="onormal"]
Clazz -> IVisitor [arrowhead="vee",style="dashed"]
IModel -> IPattern [arrowhead="vee",style="dashed"]
JFrame -> WindowConstants [arrowhead="onormal",style="dashed"]
JComponent -> ActionListener [arrowhead="vee",style="dashed"]
AbstractModelVisitor -> IField [arrowhead="vee",style="dashed"]
SDEditOutputStream -> IOutputStream [arrowhead="onormal"]
IClass -> ITraverser [arrowhead="onormal",style="dashed"]
String -> char[] [arrowhead="vee"]
Visitor -> LookupKey [arrowhead="vee",style="dashed"]
UMLImageProxy -> Component [arrowhead="vee",style="dashed"]
Runtime -> StringBuilder [arrowhead="vee",style="dashed"]
Reader -> Object [arrowhead="onormal"]
Component -> Window [arrowhead="vee",style="dashed"]
BufferedReader -> Stream [arrowhead="vee",style="dashed"]
Relation -> IVisitor [arrowhead="vee",style="dashed"]
IClass -> IMethod [arrowhead="vee",style="dashed"]
Runtime -> File [arrowhead="vee",style="dashed"]
String -> char [arrowhead="vee",style="dashed"]
Model -> IPattern [arrowhead="vee"]
Model -> IVisitor [arrowhead="vee",style="dashed"]
Reader -> NullPointerException [arrowhead="vee",style="dashed"]
ResultFrame -> Observer [arrowhead="onormal",style="dashed"]
SequenceMethodVisitor -> ClassVisitor [arrowhead="vee",style="dashed"]
Field -> IVisitor [arrowhead="vee",style="dashed"]
String -> StringJoiner [arrowhead="vee",style="dashed"]
Visitor -> IVisitor [arrowhead="onormal",style="dashed"]
UMLImageProxy -> Icon [arrowhead="onormal",style="dashed"]
Reader -> long [arrowhead="vee",style="dashed"]
Model -> IModel [arrowhead="onormal",style="dashed"]
SingletonDetector -> Visitor [arrowhead="vee",style="dashed"]
App -> LandingPage [arrowhead="vee",style="dashed"]
String -> StringBuilder [arrowhead="vee",style="dashed"]
BufferedReader -> StringBuffer [arrowhead="vee",style="dashed"]
BufferedReader -> long [arrowhead="vee",style="dashed"]
Icon -> Component [arrowhead="vee",style="dashed"]
AdapterDetector -> Relation [arrowhead="vee",style="dashed"]
ModelVisitor -> IModel [arrowhead="vee",style="dashed"]
UMLImageComponent -> JComponent [arrowhead="onormal"]
Reader -> IllegalArgumentException [arrowhead="vee",style="dashed"]
JFrame -> Component [arrowhead="vee",style="dashed"]
String -> Formatter [arrowhead="vee",style="dashed"]
IVisitMethod -> ITraverser [arrowhead="vee",style="dashed"]
Runtime -> int [arrowhead="vee",style="dashed"]
Window -> Container [arrowhead="vee",style="dashed"]
BufferedReader -> IllegalArgumentException [arrowhead="vee",style="dashed"]
AdapterDetector -> Clazz [arrowhead="vee",style="dashed"]
ResultFrame -> ModelVisitor [arrowhead="vee"]
BufferedReader -> IndexOutOfBoundsException [arrowhead="vee",style="dashed"]
String -> Object[] [arrowhead="vee",style="dashed"]
IMethod -> ITraverser [arrowhead="onormal",style="dashed"]
SequenceMethodVisitor -> SequenceMethodVisitor [arrowhead="vee",style="dashed"]
Runtime -> UnsatisfiedLinkError [arrowhead="vee",style="dashed"]
BufferedReader -> boolean [arrowhead="vee"]
AbstractModelVisitor -> IModel [arrowhead="vee"]
AdapterDetector -> IClass [arrowhead="vee",style="dashed"]
Container -> Component [arrowhead="vee"]
String -> Object [arrowhead="vee",style="dashed"]
ResultFrame -> UMLImageComponent [arrowhead="vee",style="dashed"]
Pattern -> IVisitor [arrowhead="vee",style="dashed"]
IDetector -> IModel [arrowhead="vee",style="dashed"]
SingletonDetector -> Pattern [arrowhead="vee",style="dashed"]
RootPaneContainer -> Component [arrowhead="vee",style="dashed"]
AbstractModelVisitor -> IPattern [arrowhead="vee",style="dashed"]
Reader -> IOException [arrowhead="vee",style="dashed"]
Clazz -> IMethod [arrowhead="vee"]
GraphVizOutputStream -> OutputStream [arrowhead="vee",style="dashed"]
AdapterDetector -> IModel [arrowhead="vee",style="dashed"]
Pattern -> IPattern [arrowhead="onormal",style="dashed"]
GraphVizOutputStream -> IOutputStream [arrowhead="onormal"]
ResultFrame -> IOutputStream [arrowhead="vee"]
GraphVizOutputStream -> GraphVizVistor [arrowhead="vee",style="dashed"]
ModelVisitor -> IPattern [arrowhead="vee"]
Runtime -> Process [arrowhead="vee",style="dashed"]
GraphVizOutputStream -> IModel [arrowhead="vee",style="dashed"]
Reader -> CharBuffer [arrowhead="vee",style="dashed"]
FilterOutputStream -> OutputStream [arrowhead="onormal"]
ClassDeclarationVisitor -> IClass [arrowhead="vee"]
SequenceMethodVisitor -> IMethod [arrowhead="vee"]
Framework -> SingletonDetector [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> Declaration [arrowhead="vee",style="dashed"]
Framework -> ClassDeclarationVisitor [arrowhead="vee",style="dashed"]
Component -> ImageObserver [arrowhead="onormal",style="dashed"]
Framework -> IMethod [arrowhead="vee"]
ModelVisitor -> IRelation [arrowhead="vee",style="dashed"]
BufferedReader -> IOException [arrowhead="vee",style="dashed"]
Frame -> Window [arrowhead="vee"]
MethodVisitor -> MethodVisitor [arrowhead="vee"]
AbstractModelVisitor -> Visitor [arrowhead="onormal"]
Framework -> Observer [arrowhead="vee"]
SingletonDetector -> IModel [arrowhead="vee",style="dashed"]
Framework -> Model [arrowhead="vee",style="dashed"]
SequenceMethodVisitor -> ClassVisitor [arrowhead="onormal"]
ClassFieldVisitor -> ClassVisitor [arrowhead="onormal"]
JFrame -> Container [arrowhead="vee",style="dashed"]
UMLImageProxy -> TMXXreader [arrowhead="vee"]
Framework -> Clazz [arrowhead="vee",style="dashed"]
LookupKey -> VisitType [arrowhead="vee"]
ClassMethodVisitor -> ClassVisitor [arrowhead="onormal"]
Framework -> IDetector [arrowhead="vee"]
Enum -> Serializable [arrowhead="onormal",style="dashed"]
Framework -> IOutputStream [arrowhead="vee"]
String -> StringBuffer [arrowhead="vee",style="dashed"]
GraphVizVistor -> Visitor [arrowhead="onormal"]
Container -> Component [arrowhead="onormal"]
Window -> Container [arrowhead="onormal"]
Runtime -> ProcessBuilder [arrowhead="vee",style="dashed"]
JFrame -> RootPaneContainer [arrowhead="onormal",style="dashed"]
JComponent -> Container [arrowhead="vee",style="dashed"]
Enum -> Enum [arrowhead="vee",style="dashed"]
CompositeDetector -> Pattern [arrowhead="vee",style="dashed"]
Method -> IMethod [arrowhead="onormal",style="dashed"]
JComponent -> JComponent [arrowhead="vee",style="dashed"]
AbstractModelVisitor -> Notifier [arrowhead="onormal",style="dashed"]
DecoratorDetector -> IPattern [arrowhead="vee",style="dashed"]
Reader -> char[] [arrowhead="vee"]
AbstractModelVisitor -> Observer [arrowhead="vee"]
Method -> IMethod [arrowhead="vee"]
BufferedReader -> int [arrowhead="vee"]
LandingPage -> Observer [arrowhead="onormal",style="dashed"]
CompositeDetector -> IField [arrowhead="vee",style="dashed"]
AdapterDetector -> Pattern [arrowhead="vee",style="dashed"]
NewBeeFramework -> ClassFieldVisitor [arrowhead="vee",style="dashed"]
SDEditOutputStream -> Visitor [arrowhead="vee",style="dashed"]
BufferedReader -> char[] [arrowhead="vee"]
SDEditOutputStream -> SDEditOutputStream [arrowhead="vee",style="dashed"]
Reader -> int [arrowhead="vee"]
IClass -> IDeclaration [arrowhead="vee",style="dashed"]
Notifier -> Observer [arrowhead="vee",style="dashed"]
Framework -> DecoratorDetector [arrowhead="vee",style="dashed"]
DecoratorDetector -> IDetector [arrowhead="onormal",style="dashed"]
Component -> ImageObserver [arrowhead="vee",style="dashed"]
SingletonDetector -> SingletonDetector [arrowhead="vee",style="dashed"]
String -> String[] [arrowhead="vee",style="dashed"]
AbstractModelVisitor -> IRelation [arrowhead="vee",style="dashed"]
Model -> IClass [arrowhead="vee"]
AbstractModelVisitor -> IClass [arrowhead="vee",style="dashed"]
Visitor -> VisitType [arrowhead="vee",style="dashed"]
Runtime -> SecurityException [arrowhead="vee",style="dashed"]
ClassFieldVisitor -> Field [arrowhead="vee",style="dashed"]
CompositeDetector -> IModel [arrowhead="vee",style="dashed"]
JComponent -> Serializable [arrowhead="onormal",style="dashed"]
String -> float [arrowhead="vee",style="dashed"]
HelpFrame -> JFrame [arrowhead="onormal"]
Model -> IRelation [arrowhead="vee"]
LandingPage -> JFrame [arrowhead="onormal"]
Component -> MenuContainer [arrowhead="onormal",style="dashed"]
Declaration -> IVisitor [arrowhead="vee",style="dashed"]
IVisitor -> ITraverser [arrowhead="vee",style="dashed"]
ResultFrame -> UMLImageProxy [arrowhead="vee"]
Model -> IModel [arrowhead="vee",style="dashed"]
JFrame -> Frame [arrowhead="onormal"]
Window -> Component [arrowhead="vee"]
}
