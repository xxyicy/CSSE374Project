digraph G {
fontname = "Avenir Book"
fontsize = 10
node [
fontname = "Avenir Book"
fontsize = 10
shape = "record"
]
edge [
fontname = "Avenir Book"
fontsize = 10
]
ITraverser [
shape="record",
label = "{\<\<interface\>\>\nITraverser|+ accept(arg0:IVisitor) : void\l}"
];
Visitor [
shape="record",
label = "{Visitor|- b : StringBuffer\l|+ init() : void\l+ toString() : String\l+ Start() : void\l+ end() : void\l+ appendln(arg0:String) : void\l+ append(arg0:String) : void\l+ visit(arg0:IClass) : void\l+ visit(arg0:IMethod) : void\l+ visit(arg0:IDeclaration) : void\l+ visit(arg0:IField) : void\l+ postVisit(arg0:IClass) : void\l+ visit(arg0:String) : void\l+ visit(arg0:IRelation) : void\l}"
];
ClassMethodVisitor [
shape="record",
label = "{ClassMethodVisitor|- c : IClass\l|+ init(arg0:int,arg1:IClass) : void\l+ init(arg0:int,arg1:ClassVisitor,arg2:IClass) : void\l+ visitMethod(arg0:int,arg1:String,arg2:String,arg3:String,arg4:String[]) : MethodVisitor\l addAccessLevel(arg0:int) : String\l addReturnType(arg0:String) : String\l addArguments(arg0:String) : List\l}"
];
Clazz [
shape="record",
label = "{Clazz|- methods : List\l- fields : List\l- declaration : IDeclaration\l|+ init() : void\l+ accept(arg0:IVisitor) : void\l+ addMethod(arg0:IMethod) : void\l+ addField(arg0:IField) : void\l+ addDeclaration(arg0:IDeclaration) : void\l+ getDeclaration() : IDeclaration\l+ getMethods() : List\l+ getFields() : List\l+ toString() : String\l+ getName() : String\l}"
];
IVisitor [
shape="record",
label = "{\<\<interface\>\>\nIVisitor|+ visit(arg0:IClass) : void\l+ visit(arg0:String) : void\l+ visit(arg0:IMethod) : void\l+ visit(arg0:IDeclaration) : void\l+ visit(arg0:IField) : void\l+ postVisit(arg0:IClass) : void\l}"
];
Relation [
shape="record",
label = "{Relation|- from : String\l- to : String\l- type : String\l|+ accept(arg0:IVisitor) : void\l+ init(arg0:String,arg1:String,arg2:String) : void\l+ toString() : String\l+ getFrom() : String\l+ getTo() : String\l+ getType() : String\l+ hashCode() : int\l+ equals(arg0:Object) : boolean\l}"
];
ClassFinder [
shape="record",
label = "{ClassFinder|- DOT : char\l- SLASH : char\l- CLASS_SUFFIX : String\l- BAD_PACKAGE_ERROR : String\l|+ init() : void\l+ find(arg0:String) : List\l- find(arg0:File,arg1:String) : List\l}"
];
Field [
shape="record",
label = "{Field|- name : String\l- type : String\l- access : String\l|+ init(arg0:String,arg1:String,arg2:String) : void\l+ toString() : String\l+ getName() : String\l+ getType() : String\l+ getAccess() : String\l+ accept(arg0:IVisitor) : void\l}"
];
Model [
shape="record",
label = "{Model|- classes : Set\l- relations : Set\l|+ init() : void\l+ accept(arg0:IVisitor) : void\l+ toString() : String\l+ getClasses() : Set\l+ getRelations() : Set\l+ addClass(arg0:IClass) : void\l+ addRelation(arg0:IRelation) : void\l}"
];
App [
shape="record",
label = "{App|+ init() : void\l+ main(arg0:String[]) : void throws Exception\l}"
];
IModel [
shape="record",
label = "{\<\<interface\>\>\nIModel|+ getClasses() : Set\l+ getRelations() : Set\l+ addClass(arg0:IClass) : void\l+ addRelation(arg0:IRelation) : void\l}"
];
Declaration [
shape="record",
label = "{Declaration|- type : String\l- name : String\l|+ init(arg0:String,arg1:String) : void\l+ toString() : String\l+ getType() : String\l+ getName() : String\l+ accept(arg0:IVisitor) : void\l}"
];
IClass [
shape="record",
label = "{\<\<interface\>\>\nIClass|+ addMethod(arg0:IMethod) : void\l+ addField(arg0:IField) : void\l+ addDeclaration(arg0:IDeclaration) : void\l+ getDeclaration() : IDeclaration\l+ getMethods() : List\l+ getFields() : List\l+ getName() : String\l}"
];
IRelation [
shape="record",
label = "{\<\<interface\>\>\nIRelation|+ getFrom() : String\l+ getTo() : String\l+ getType() : String\l}"
];
IDeclaration [
shape="record",
label = "{\<\<interface\>\>\nIDeclaration|+ getType() : String\l+ getName() : String\l+ getSuper() : String\l+ getInterfaces() : List\l}"
];
Method [
shape="record",
label = "{Method|- name : String\l- type : String\l- access : String\l- params : List\l- exceptions : List\l|+ init(arg0:String,arg1:String,arg2:String,arg3:List,arg4:List) : void\l+ toString() : String\l+ getName() : String\l+ getType() : String\l+ getAccess() : String\l+ getExceptions() : List\l+ getParamTypes() : List\l+ accept(arg0:IVisitor) : void\l}"
];
Utility [
shape="record",
label = "{Utility|+ init() : void\l+ simplifyClassName(arg0:String) : String\l+ simplifyType(arg0:String) : String\l+ isNotBuiltIn(arg0:String) : boolean\l}"
];
ClassDeclarationVisitor [
shape="record",
label = "{ClassDeclarationVisitor|- c : IClass\l- m : IModel\l|+ init(arg0:int,arg1:IClass,arg2:IModel) : void\l+ visit(arg0:int,arg1:int,arg2:String,arg3:String,arg4:String,arg5:String[]) : void\l}"
];
IField [
shape="record",
label = "{\<\<interface\>\>\nIField|+ getName() : String\l+ getType() : String\l+ getAccess() : String\l}"
];
IMethod [
shape="record",
label = "{\<\<interface\>\>\nIMethod|+ getName() : String\l+ getType() : String\l+ getAccess() : String\l+ getParamTypes() : List\l+ getExceptions() : List\l}"
];
ClassFieldVisitor [
shape="record",
label = "{ClassFieldVisitor|- c : IClass\l|+ init(arg0:int,arg1:IClass) : void\l+ init(arg0:int,arg1:ClassVisitor,arg2:IClass) : void\l+ visitField(arg0:int,arg1:String,arg2:String,arg3:String,arg4:Object) : FieldVisitor\l}"
];
App -> Visitor [arrowhead="vee",style="dashed"]
IModel -> IRelation [arrowhead="vee",style="dashed"]
Model -> IRelation
ClassFieldVisitor -> FieldVisitor [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> ClassVisitor [arrowhead="onormal"]
ITraverser -> IVisitor [arrowhead="vee",style="dashed"]
ClassFieldVisitor -> IClass
Method -> IVisitor [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> ClassVisitor [arrowhead="vee",style="dashed"]
Clazz -> IVisitor [arrowhead="vee",style="dashed"]
IVisitor -> IClass [arrowhead="vee",style="dashed"]
ClassMethodVisitor -> IClass
ClassDeclarationVisitor -> IModel
IClass -> ITraverser [arrowhead="onormal",style="dashed"]
Field -> IField [arrowhead="onormal",style="dashed"]
Clazz -> IField [arrowhead="vee",style="dashed"]
Relation -> IVisitor [arrowhead="vee",style="dashed"]
IClass -> IMethod [arrowhead="vee",style="dashed"]
Visitor -> IField [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> IClass
ClassFieldVisitor -> IClass [arrowhead="vee",style="dashed"]
IVisitor -> IDeclaration [arrowhead="vee",style="dashed"]
Visitor -> IClass [arrowhead="vee",style="dashed"]
Model -> IVisitor [arrowhead="vee",style="dashed"]
IDeclaration -> ITraverser [arrowhead="onormal",style="dashed"]
IModel -> ITraverser [arrowhead="onormal",style="dashed"]
Field -> IVisitor [arrowhead="vee",style="dashed"]
ClassMethodVisitor -> IClass [arrowhead="vee",style="dashed"]
App -> Clazz [arrowhead="vee",style="dashed"]
Visitor -> IVisitor [arrowhead="onormal",style="dashed"]
Clazz -> IMethod [arrowhead="vee",style="dashed"]
Model -> IModel [arrowhead="onormal",style="dashed"]
App -> ClassMethodVisitor [arrowhead="vee",style="dashed"]
Relation -> IRelation [arrowhead="onormal",style="dashed"]
ClassMethodVisitor -> Method [arrowhead="vee",style="dashed"]
Clazz -> IDeclaration
IField -> ITraverser [arrowhead="onormal",style="dashed"]
IMethod -> ITraverser [arrowhead="onormal",style="dashed"]
IRelation -> ITraverser [arrowhead="onormal",style="dashed"]
Declaration -> IDeclaration [arrowhead="onormal",style="dashed"]
Visitor -> IMethod [arrowhead="vee",style="dashed"]
ClassFieldVisitor -> ClassVisitor [arrowhead="vee",style="dashed"]
App -> ClassFieldVisitor [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> IModel [arrowhead="vee",style="dashed"]
Visitor -> IRelation [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> Declaration [arrowhead="vee",style="dashed"]
Model -> IClass [arrowhead="vee",style="dashed"]
ClassMethodVisitor -> MethodVisitor [arrowhead="vee",style="dashed"]
IVisitor -> IMethod [arrowhead="vee",style="dashed"]
Model -> IRelation [arrowhead="vee",style="dashed"]
IClass -> IField [arrowhead="vee",style="dashed"]
ClassFieldVisitor -> ClassVisitor [arrowhead="onormal"]
ClassMethodVisitor -> ClassVisitor [arrowhead="onormal"]
App -> ClassDeclarationVisitor [arrowhead="vee",style="dashed"]
Method -> IMethod [arrowhead="onormal",style="dashed"]
App -> Model [arrowhead="vee",style="dashed"]
Clazz -> IClass [arrowhead="onormal",style="dashed"]
Clazz -> IDeclaration [arrowhead="vee",style="dashed"]
IClass -> IDeclaration [arrowhead="vee",style="dashed"]
App -> ClassReader [arrowhead="vee",style="dashed"]
IModel -> IClass [arrowhead="vee",style="dashed"]
Clazz -> IField
ClassFieldVisitor -> Field [arrowhead="vee",style="dashed"]
Visitor -> IDeclaration [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> IClass [arrowhead="vee",style="dashed"]
ClassMethodVisitor -> ClassVisitor [arrowhead="vee",style="dashed"]
Model -> IClass
Clazz -> IMethod
IVisitor -> IField [arrowhead="vee",style="dashed"]
Declaration -> IVisitor [arrowhead="vee",style="dashed"]
ClassDeclarationVisitor -> Relation [arrowhead="vee",style="dashed"]
}
