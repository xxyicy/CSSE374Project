digraph G {
fontname = "Avenir Book"
fontsize = 10
node [
fontname = "Avenir Book"
fontsize = 10
shape = "record"
style="filled"
]
edge [
fontname = "Avenir Book"
fontsize = 10
]
IDecryption [
shape="record",
label = "{\<\<interface\>\>\nIDecryption|+ decrypt(arg0:char) : char\l}"
];
IEncryption [
shape="record",
label = "{\<\<interface\>\>\nIEncryption|+ encrypt(arg0:char) : char\l}"
];
InputStream [
shape="record",
fillcolor="green",
label = "{InputStream\n\<\<component\>\>\n|- MAX_SKIP_BUFFER_SIZE : int\l|+ init() : void\l+ read() : int throws IOException\l+ read(arg0:byte[]) : int throws IOException\l+ read(arg0:byte[],arg1:int,arg2:int) : int throws IOException\l+ skip(arg0:long) : long throws IOException\l+ available() : int throws IOException\l+ close() : void throws IOException\l+ mark(arg0:int) : void\l+ reset() : void throws IOException\l+ markSupported() : boolean\l}"
];
OutputStream [
shape="record",
fillcolor="green",
label = "{OutputStream\n\<\<component\>\>\n|+ init() : void\l+ write(arg0:int) : void throws IOException\l+ write(arg0:byte[]) : void throws IOException\l+ write(arg0:byte[],arg1:int,arg2:int) : void throws IOException\l+ flush() : void throws IOException\l+ close() : void throws IOException\l}"
];
AutoCloseable [
shape="record",
label = "{\<\<interface\>\>\nAutoCloseable|+ close() : void throws Exception\l}"
];
DecryptionInputStream [
shape="record",
fillcolor="green",
label = "{DecryptionInputStream\n\<\<decorator\>\>\n|- decryptor : IDecryption\l|+ init(arg0:InputStream,arg1:IDecryption) : void\l+ read() : int throws IOException\l+ read(arg0:byte[],arg1:int,arg2:int) : int throws IOException\l}"
];
EncryptionOutputStream [
shape="record",
fillcolor="green",
label = "{EncryptionOutputStream\n\<\<decorator\>\>\n|- encryptor : IEncryption\l|+ init(arg0:OutputStream,arg1:IEncryption) : void\l+ write(arg0:int) : void throws IOException\l}"
];
Flushable [
shape="record",
label = "{\<\<interface\>\>\nFlushable|+ flush() : void throws IOException\l}"
];
FilterInputStream [
shape="record",
fillcolor="green",
label = "{FilterInputStream\n\<\<decorator\>\>\n|# in : InputStream\l|# init(arg0:InputStream) : void\l+ read() : int throws IOException\l+ read(arg0:byte[]) : int throws IOException\l+ read(arg0:byte[],arg1:int,arg2:int) : int throws IOException\l+ skip(arg0:long) : long throws IOException\l+ available() : int throws IOException\l+ close() : void throws IOException\l+ mark(arg0:int) : void\l+ reset() : void throws IOException\l+ markSupported() : boolean\l}"
];
Closeable [
shape="record",
label = "{\<\<interface\>\>\nCloseable|+ close() : void throws IOException\l}"
];
TextEditorApp [
shape="record",
label = "{TextEditorApp|+ init() : void\l+ main(arg0:String[]) : void throws Exception\l}"
];
IDecryption [
shape="record",
label = "{\<\<interface\>\>\nIDecryption|+ decrypt(arg0:char) : char\l}"
];
FilterOutputStream [
shape="record",
fillcolor="green",
label = "{FilterOutputStream\n\<\<decorator\>\>\n|# out : OutputStream\l|+ init(arg0:OutputStream) : void\l+ write(arg0:int) : void throws IOException\l+ write(arg0:byte[]) : void throws IOException\l+ write(arg0:byte[],arg1:int,arg2:int) : void throws IOException\l+ flush() : void throws IOException\l+ close() : void throws IOException\l}"
];
IEncryption [
shape="record",
label = "{\<\<interface\>\>\nIEncryption|+ encrypt(arg0:char) : char\l}"
];
SubstitutionCipher [
shape="record",
label = "{SubstitutionCipher|- encryptionKey : char[]\l- decryptionKey : char[]\l|+ init() : void\l+ encrypt(arg0:char) : char\l+ decrypt(arg0:char) : char\l}"
];
EncryptionOutputStream -> IEncryption [arrowhead="vee"]
EncryptionOutputStream -> FilterOutputStream [arrowhead="onormal"]
InputStream -> Closeable [arrowhead="onormal",style="dashed"]
TextEditorApp -> SubstitutionCipher [arrowhead="vee",style="dashed"]
FilterOutputStream -> OutputStream [arrowhead="vee",label="decorates"]
FilterInputStream -> InputStream [arrowhead="onormal"]
TextEditorApp -> EncryptionOutputStream [arrowhead="vee",style="dashed"]
SubstitutionCipher -> IDecryption [arrowhead="onormal",style="dashed"]
FilterInputStream -> InputStream [arrowhead="vee",label="decorates"]
TextEditorApp -> DecryptionInputStream [arrowhead="vee",style="dashed"]
FilterOutputStream -> OutputStream [arrowhead="onormal"]
DecryptionInputStream -> InputStream [arrowhead="vee",style="dashed"]
DecryptionInputStream -> IDecryption [arrowhead="vee"]
Closeable -> AutoCloseable [arrowhead="onormal",style="dashed"]
DecryptionInputStream -> FilterInputStream [arrowhead="onormal"]
OutputStream -> Flushable [arrowhead="onormal",style="dashed"]
EncryptionOutputStream -> OutputStream [arrowhead="vee",style="dashed"]
OutputStream -> Closeable [arrowhead="onormal",style="dashed"]
SubstitutionCipher -> IEncryption [arrowhead="onormal",style="dashed"]
}
