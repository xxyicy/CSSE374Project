digraph G {
fontname = "Avenir Book"
fontsize = 10
node [
fontname = "Avenir Book"
fontsize = 10
shape = "record"
]
edge [
fontname = "Avenir Book"
fontsize = 10
]
Enumeration [
shape="record",
style="filled"
fillcolor="red"
label = "{\<\<interface\>\>\nEnumeration\n\<\<target\>\>\n|+ hasMoreElements() : boolean\l+ nextElement() : Object\l}"
];
Iterator [
shape="record",
style="filled"
fillcolor="red"
label = "{\<\<interface\>\>\nIterator\n\<\<adaptee\>\>\n|+ hasNext() : boolean\l+ next() : Object\l+ remove() : void\l+ forEachRemaining(arg0:Consumer) : void\l}"
];
EnumerationAdapter [
shape="record",
style="filled"
fillcolor="red"
label = "{EnumerationAdapter\n\<\<adapter\>\>\n|- iter : Iterator\l|+ init(arg0:Iterator) : void\l+ hasMoreElements() : boolean\l+ nextElement() : Object\l}"
];
LinearTransformer [
shape="record",
label = "{LinearTransformer|- enumTion : Enumeration\l|+ init(arg0:Enumeration) : void\l+ transform(arg0:OutputStream) : void throws Exception\l}"
];
App [
shape="record",
label = "{App|+ init() : void\l+ main(arg0:String[]) : void throws Exception\l}"
];
Iterator -> Object [arrowhead="onormal"]
Iterator -> UnsupportedOperationException [arrowhead="vee",style="dashed"]
LinearTransformer -> Enumeration [arrowhead="vee",style="dashed"]
App -> EnumerationAdapter [arrowhead="vee",style="dashed"]
Iterator -> Consumer [arrowhead="vee",style="dashed"]
EnumerationAdapter -> Enumeration [arrowhead="onormal",style="dashed"]
App -> LinearTransformer [arrowhead="vee",style="dashed"]
Iterator -> Object [arrowhead="vee",style="dashed"]
Iterator -> boolean [arrowhead="vee",style="dashed"]
EnumerationAdapter -> Iterator [arrowhead="vee",label="adapts"]
}